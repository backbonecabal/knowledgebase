[{"permalink":"//","layout":"default","title":"Backbone Knowledge Base","content":"# Backbone Knowledge Base\n\nKnowledgebase for Backbone Cabal\n\n## Overview\n\nThis is a strategy that realizes profit by smart transaction batching for the purposes of arbitrage by controlling transaction ordering.\n\nRight now every user sends a transaction directly to the network mempool and thus give away the arbitrage, front-running, back-running opportunities to miners(or random bots).\n\nYCabal creates a virtualized mempool (i.e. a MEV-relay network) that aggregates transactions (batching), such transactions include:\n\nUsers can opt in and send transactions to YCabal and in return for not having to pay for gas for their transaction we batch process it and take the arbitrage profit from it. Risk by inventory price risk is carried by a Vault, where Vault depositers are returned the profit the YCabal realizes.\n\n## Knowledgebase Site Index\n\n<!-- prettier-ignore-start -->\n\n| source | link |\n| --------------- | -------------------------------------------------------------- |\n{% for page in site.pages -%}\n| {{ page.path }} | [{{ page.url | relative_url }}]({{ page.url | relative_url }}) |\n{% endfor %}\n\n<!-- prettier-ignore-end -->\n\n## License\n\nThe theme is available as open source under the terms of the MIT License\nCode is available under the terms of the SSPL License\n","dir":"/","name":"README.md","path":"README.md","url":"/"},{"permalink":"/api/Apis/","layout":"default","title":"API Overview","content":"# API Overview\n\n{% include list.liquid all=true %}\n\nAll URIs are relative to *https://sushi.backbonecabal.xyz*\n\n| Method | HTTP request | Description |\n| -------------------------------------------------------------------------- | -------------------------------------- | ----------------------------------------------------- |\n| [**apiV1OrdersGet**](DefaultApi.md#apiV1OrdersGet) | **GET** /api/v1/orders | Get existing orders. |\n| [**apiV1OrdersPost**](DefaultApi.md#apiV1OrdersPost) | **POST** /api/v1/orders | Create a new order. |\n| [**apiV1OrdersUIDDelete**](DefaultApi.md#apiV1OrdersUIDDelete) | **DELETE** /api/v1/orders/{UID} | Cancels order by marking it invalid with a timestamp. |\n| [**apiV1OrdersUIDGet**](DefaultApi.md#apiV1OrdersUIDGet) | **GET** /api/v1/orders/{UID} | Get existing order from UID. |\n| [**apiV1SolvableOrdersGet**](DefaultApi.md#apiV1SolvableOrdersGet) | **GET** /api/v1/solvable_orders | Get solvable orders. |\n| [**apiV1TokensSellTokenFeeGet**](DefaultApi.md#apiV1TokensSellTokenFeeGet) | **GET** /api/v1/tokens/{sellToken}/fee |\n| [**apiV1TradesGet**](DefaultApi.md#apiV1TradesGet) | **GET** /api/v1/trades | Get existing Trades. |\n\n<a name=\"apiV1OrdersGet\"></a>\n\n# **apiV1OrdersGet**\n\n> List apiV1OrdersGet(owner, sellToken, buyToken, includeFullyExecuted, includeInvalidated, includeInsufficientBalance, minValidTo)\n\nGet existing orders.\n\n By default all currently valid orders are returned. The set of returned orders can be reduced by setting owner, sell token, buy token filters. It can be increased by disabling different order validity exclusion criteria.\n\n### Parameters\n\n| Name | Type | Description | Notes |\n| ------------------------------ | ----------- | -------------------------------------------------------------------------------- | ----------------------------- |\n| **owner** | **String** | Ethereum 40 byte address encoded as a hex with &#x60;0x&#x60; prefix. | [optional] [default to null] |\n| **sellToken** | **String** | Ethereum 40 byte address encoded as a hex with &#x60;0x&#x60; prefix. | [optional] [default to null] |\n| **buyToken** | **String** | Ethereum 40 byte address encoded as a hex with &#x60;0x&#x60; prefix. | [optional] [default to null] |\n| **includeFullyExecuted** | **Boolean** | Should fully executed orders be returned? | [optional] [default to false] |\n| **includeInvalidated** | **Boolean** | Should orders that have been invalidated in the smart contract be returned? | [optional] [default to false] |\n| **includeInsufficientBalance** | **Boolean** | Should fill or kill orders that are not sufficiently funded be included? | [optional] [default to false] |\n| **minValidTo** | **Integer** | Minimum valid_to timestamp for included orders. The default is the current time. | [optional] [default to null] |\n\n### Return type\n\n[**List**](/pages/backbonecabal/knowledgebase/api/Models/Order.html)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json\n\n<a name=\"apiV1OrdersPost\"></a>\n\n# **apiV1OrdersPost**\n\n> String apiV1OrdersPost(body)\n\nCreate a new order.\n\n### Parameters\n\n| Name | Type | Description | Notes |\n| -------- | ------------------------------------------------ | -------------------- | ----- |\n| **body** | [**OrderCreation**](/pages/backbonecabal/knowledgebase/api/Models/OrderCreation.html) | The order to create. |\n\n### Return type\n\n[**String**](..//Models/string.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json\n\n<a name=\"apiV1OrdersUIDDelete\"></a>\n\n# **apiV1OrdersUIDDelete**\n\n> apiV1OrdersUIDDelete(uID, body)\n\nCancels order by marking it invalid with a timestamp.\n\n The successful deletion might not prevent solvers from settling the order Authentication must be provided by signing the following message:\n\n### Parameters\n\n| Name | Type | Description | Notes |\n| -------- | -------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | ----------------- |\n| **uID** | **String** | Unique identifier for the order: 56 bytes encoded as hex with &#x60;0x&#x60; prefix. Bytes 0 to 32 are the order digest, bytes 30 to 52 the owner address and bytes 52..56 valid to, | [default to null] |\n| **body** | [**OrderCancellation**](/pages/backbonecabal/knowledgebase/api/Models/OrderCancellation.html) | Signed OrderCancellation |\n\n### Return type\n\nnull (empty response body)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: Not defined\n\n<a name=\"apiV1OrdersUIDGet\"></a>\n\n# **apiV1OrdersUIDGet**\n\n> List apiV1OrdersUIDGet(uID)\n\nGet existing order from UID.\n\n### Parameters\n\n| Name | Type | Description | Notes |\n| ------- | ---------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | ----------------- |\n| **uID** | **String** | Unique identifier for the order: 56 bytes encoded as hex with &#x60;0x&#x60; prefix. Bytes 0 to 32 are the order digest, bytes 30 to 52 the owner address and bytes 52..56 valid to, | [default to null] |\n\n### Return type\n\n[**List**](/pages/backbonecabal/knowledgebase/api/Models/Order.html)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json\n\n<a name=\"apiV1SolvableOrdersGet\"></a>\n\n# **apiV1SolvableOrdersGet**\n\n> List apiV1SolvableOrdersGet()\n\nGet solvable orders.\n\n The set of orders that solvers should be solving right now. These orders are determined to be valid at the time of the request.\n\n### Parameters\n\nThis endpoint does not need any parameter.\n\n### Return type\n\n[**List**](/pages/backbonecabal/knowledgebase/api/Models/Order.html)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json\n\n<a name=\"apiV1TokensSellTokenFeeGet\"></a>\n\n# **apiV1TokensSellTokenFeeGet**\n\n> FeeInformation apiV1TokensSellTokenFeeGet(sellToken)\n\n The fee that is charged for placing an order. The fee is described by a minimum fee - in order to cover the gas costs for onchain settling - and a feeRatio charged to the users for using the service.\n\n### Parameters\n\n| Name | Type | Description | Notes |\n| ------------- | ---------- | --------------------------------------------------------------------- | ----------------- |\n| **sellToken** | **String** | Ethereum 40 byte address encoded as a hex with &#x60;0x&#x60; prefix. | [default to null] |\n\n### Return type\n\n[**FeeInformation**](/pages/backbonecabal/knowledgebase/api/Models/FeeInformation.html)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json\n\n<a name=\"apiV1TradesGet\"></a>\n\n# **apiV1TradesGet**\n\n> List apiV1TradesGet(owner, orderUid)\n\nGet existing Trades.\n\n By default all trades are returned. Queries can be refined by specifiying owner or order_uid.\n\n### Parameters\n\n| Name | Type | Description | Notes |\n| ------------ | ---------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | ---------------------------- |\n| **owner** | **String** | Ethereum 40 byte address encoded as a hex with &#x60;0x&#x60; prefix. | [optional] [default to null] |\n| **orderUid** | **String** | Unique identifier for the order: 56 bytes encoded as hex with &#x60;0x&#x60; prefix. Bytes 0 to 32 are the order digest, bytes 30 to 52 the owner address and bytes 52..56 valid to, | [optional] [default to null] |\n\n### Return type\n\n[**List**](/pages/backbonecabal/knowledgebase/api/Models/Trade.html)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json\n","dir":"/api/Apis/","name":"README.md","path":"api/Apis/README.md","url":"/api/Apis/"},{"layout":"default","title":"FeeInformation","content":"# FeeInformation\n\n## Properties\n\n| Name | Type | Description | Notes |\n| ------------------ | --------------------------- | ------------------------------------------------------------------------------------------------------------------------------- | ---------------------------- |\n| **expirationDate** | [**String**](string.md) | Expiration date of the offered fee. Order service might not accept the fee after this expiration date. Encoded as ISO 8601 UTC. | [optional] [default to null] |\n| **minimalFee** | [**String**](string.md) | Amount of a token. uint256 encoded in decimal. | [optional] [default to null] |\n| **feeRatio** | [**BigDecimal**](number.md) | The fee ratio charged on a sellAmount. Denoted in basis points | [optional] [default to null] |\n\n[[Back to Model list]](/pages/backbonecabal/knowledgebase/#documentation-for-models) [[Back to API list]](/pages/backbonecabal/knowledgebase/#documentation-for-api-endpoints) [[Back to README]](/pages/backbonecabal/knowledgebase/)\n","dir":"/api/","name":"FeeInformation.md","path":"api/FeeInformation.md","url":"/api/FeeInformation.html"},{"layout":"default","title":"FeeInformation","content":"# FeeInformation\n\n## Properties\n\n| Name | Type | Description | Notes |\n| ------------------ | --------------------------- | ------------------------------------------------------------------------------------------------------------------------------- | ---------------------------- |\n| **expirationDate** | [**String**](string.md) | Expiration date of the offered fee. Order service might not accept the fee after this expiration date. Encoded as ISO 8601 UTC. | [optional] [default to null] |\n| **minimalFee** | [**String**](string.md) | Amount of a token. uint256 encoded in decimal. | [optional] [default to null] |\n| **feeRatio** | [**BigDecimal**](number.md) | The fee ratio charged on a sellAmount. Denoted in basis points | [optional] [default to null] |\n\n[[Back to Model list]](/pages/backbonecabal/knowledgebase/api/#documentation-for-models) [[Back to API list]](/pages/backbonecabal/knowledgebase/api/#documentation-for-api-endpoints) [[Back to README]](/pages/backbonecabal/knowledgebase/api/)\n","dir":"/api/Models/","name":"FeeInformation.md","path":"api/Models/FeeInformation.md","url":"/api/Models/FeeInformation.html"},{"layout":"default","title":"Order","content":"# Order\n\n## Properties\n\n| Name | Type | Description | Notes |\n| -------------------------------- | ----------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | ---------------------------- |\n| **sellToken** | [**String**](string.md) | Ethereum 40 byte address encoded as a hex with &#x60;0x&#x60; prefix. | [optional] [default to null] |\n| **buyToken** | [**String**](string.md) | Ethereum 40 byte address encoded as a hex with &#x60;0x&#x60; prefix. | [optional] [default to null] |\n| **sellAmount** | [**String**](string.md) | Amount of a token. uint256 encoded in decimal. | [optional] [default to null] |\n| **buyAmount** | [**String**](string.md) | Amount of a token. uint256 encoded in decimal. | [optional] [default to null] |\n| **validTo** | [**Integer**](integer.md) | Unix timestamp until the order is valid. uint32. | [optional] [default to null] |\n| **appData** | [**Integer**](integer.md) | Arbitrary identifier sent along with the order. Could be used to track the interface or other meta-aspects of the order. uint32 encoded | [optional] [default to null] |\n| **feeAmount** | [**String**](string.md) | Amount of a token. uint256 encoded in decimal. | [optional] [default to null] |\n| **kind** | [**OrderType**](/pages/backbonecabal/knowledgebase/api/Models/OrderType.html) | | [optional] [default to null] |\n| **partiallyFillable** | [**Boolean**](boolean.md) | Is this a fill-or-kill order or a partially fillable order? | [optional] [default to null] |\n| **Signature** | [**Object**](.md) | 65 bytes encoded as hex with &#x60;0x&#x60; prefix. r + s + v from the spec. | [optional] [default to null] |\n| **creationTime** | [**String**](string.md) | Creation time of the order. Encoded as ISO 8601 UTC. | [optional] [default to null] |\n| **owner** | [**String**](string.md) | Ethereum 40 byte address encoded as a hex with &#x60;0x&#x60; prefix. | [optional] [default to null] |\n| **UID** | [**String**](string.md) | Unique identifier for the order: 56 bytes encoded as hex with &#x60;0x&#x60; prefix. Bytes 0 to 32 are the order digest, bytes 30 to 52 the owner address and bytes 52..56 valid to, | [optional] [default to null] |\n| **availableBalance** | [**String**](string.md) | Amount of a token. uint256 encoded in decimal. | [optional] [default to null] |\n| **executedSellAmount** | [**String**](string.md) | A big unsigned integer encoded in decimal. | [optional] [default to null] |\n| **executedSellAmountBeforeFees** | [**String**](string.md) | A big unsigned integer encoded in decimal. | [optional] [default to null] |\n| **executedBuyAmount** | [**String**](string.md) | A big unsigned integer encoded in decimal. | [optional] [default to null] |\n| **executedFeeAmount** | [**String**](string.md) | A big unsigned integer encoded in decimal. | [optional] [default to null] |\n| **invalidated** | [**Boolean**](boolean.md) | Has this order been invalidated? | [optional] [default to null] |\n\n[[Back to Model list]](/pages/backbonecabal/knowledgebase/api/#documentation-for-models) [[Back to API list]](/pages/backbonecabal/knowledgebase/api/#documentation-for-api-endpoints) [[Back to README]](/pages/backbonecabal/knowledgebase/api/)\n","dir":"/api/Models/","name":"Order.md","path":"api/Models/Order.md","url":"/api/Models/Order.html"},{"layout":"default","title":"OrderCancellation","content":"# OrderCancellation\n\n## Properties\n\n| Name | Type | Description | Notes |\n| ------------- | ----------------- | ---------------------------------------------------------------------------- | ---------------------------- |\n| **signature** | [**Object**](.md) | 65 bytes encoded as hex with &#x60;0x&#x60; prefix. r + s + v from the spec. | [optional] [default to null] |\n\n[[Back to Model list]](/pages/backbonecabal/knowledgebase/api/#documentation-for-models) [[Back to API list]](/pages/backbonecabal/knowledgebase/api/#documentation-for-api-endpoints) [[Back to README]](/pages/backbonecabal/knowledgebase/api/)\n","dir":"/api/Models/","name":"OrderCancellation.md","path":"api/Models/OrderCancellation.md","url":"/api/Models/OrderCancellation.html"},{"layout":"default","title":"OrderCancellationError","content":"# OrderCancellationError\n\n## Properties\n\n| Name | Type | Description | Notes |\n| --------------- | ----------------------- | ----------- | ---------------------------- |\n| **errorType** | [**String**](string.md) | | [optional] [default to null] |\n| **description** | [**String**](string.md) | | [optional] [default to null] |\n\n[[Back to Model list]](/pages/backbonecabal/knowledgebase/api/#documentation-for-models) [[Back to API list]](/pages/backbonecabal/knowledgebase/api/#documentation-for-api-endpoints) [[Back to README]](/pages/backbonecabal/knowledgebase/api/)\n","dir":"/api/Models/","name":"OrderCancellationError.md","path":"api/Models/OrderCancellationError.md","url":"/api/Models/OrderCancellationError.html"},{"layout":"default","title":"OrderCreation","content":"# OrderCreation\n\n## Properties\n\n| Name | Type | Description | Notes |\n| --------------------- | ----------------------------- | --------------------------------------------------------------------------------------------------------------------------------------- | ---------------------------- |\n| **sellToken** | [**String**](string.md) | Ethereum 40 byte address encoded as a hex with &#x60;0x&#x60; prefix. | [optional] [default to null] |\n| **buyToken** | [**String**](string.md) | Ethereum 40 byte address encoded as a hex with &#x60;0x&#x60; prefix. | [optional] [default to null] |\n| **sellAmount** | [**String**](string.md) | Amount of a token. uint256 encoded in decimal. | [optional] [default to null] |\n| **buyAmount** | [**String**](string.md) | Amount of a token. uint256 encoded in decimal. | [optional] [default to null] |\n| **validTo** | [**Integer**](integer.md) | Unix timestamp until the order is valid. uint32. | [optional] [default to null] |\n| **appData** | [**Integer**](integer.md) | Arbitrary identifier sent along with the order. Could be used to track the interface or other meta-aspects of the order. uint32 encoded | [optional] [default to null] |\n| **feeAmount** | [**String**](string.md) | Amount of a token. uint256 encoded in decimal. | [optional] [default to null] |\n| **kind** | [**OrderType**](/pages/backbonecabal/knowledgebase/api/Models/OrderType.html) | | [optional] [default to null] |\n| **partiallyFillable** | [**Boolean**](boolean.md) | Is this a fill-or-kill order or a partially fillable order? | [optional] [default to null] |\n| **Signature** | [**Object**](.md) | 65 bytes encoded as hex with &#x60;0x&#x60; prefix. r + s + v from the spec. | [optional] [default to null] |\n\n[[Back to Model list]](/pages/backbonecabal/knowledgebase/api/#documentation-for-models) [[Back to API list]](/pages/backbonecabal/knowledgebase/api/#documentation-for-api-endpoints) [[Back to README]](/pages/backbonecabal/knowledgebase/api/)\n","dir":"/api/Models/","name":"OrderCreation.md","path":"api/Models/OrderCreation.md","url":"/api/Models/OrderCreation.html"},{"layout":"default","title":"OrderMetaData","content":"# OrderMetaData\n\n## Properties\n\n| Name | Type | Description | Notes |\n| -------------------------------- | ------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | ---------------------------- |\n| **creationTime** | [**String**](string.md) | Creation time of the order. Encoded as ISO 8601 UTC. | [optional] [default to null] |\n| **owner** | [**String**](string.md) | Ethereum 40 byte address encoded as a hex with &#x60;0x&#x60; prefix. | [optional] [default to null] |\n| **UID** | [**String**](string.md) | Unique identifier for the order: 56 bytes encoded as hex with &#x60;0x&#x60; prefix. Bytes 0 to 32 are the order digest, bytes 30 to 52 the owner address and bytes 52..56 valid to, | [optional] [default to null] |\n| **availableBalance** | [**String**](string.md) | Amount of a token. uint256 encoded in decimal. | [optional] [default to null] |\n| **executedSellAmount** | [**String**](string.md) | A big unsigned integer encoded in decimal. | [optional] [default to null] |\n| **executedSellAmountBeforeFees** | [**String**](string.md) | A big unsigned integer encoded in decimal. | [optional] [default to null] |\n| **executedBuyAmount** | [**String**](string.md) | A big unsigned integer encoded in decimal. | [optional] [default to null] |\n| **executedFeeAmount** | [**String**](string.md) | A big unsigned integer encoded in decimal. | [optional] [default to null] |\n| **invalidated** | [**Boolean**](boolean.md) | Has this order been invalidated? | [optional] [default to null] |\n\n[[Back to Model list]](/pages/backbonecabal/knowledgebase/api/#documentation-for-models) [[Back to API list]](/pages/backbonecabal/knowledgebase/api/#documentation-for-api-endpoints) [[Back to README]](/pages/backbonecabal/knowledgebase/api/)\n","dir":"/api/Models/","name":"OrderMetaData.md","path":"api/Models/OrderMetaData.md","url":"/api/Models/OrderMetaData.html"},{"layout":"default","title":"OrderPostError","content":"# OrderPostError\n\n## Properties\n\n| Name | Type | Description | Notes |\n| --------------- | ----------------------- | ----------- | ---------------------------- |\n| **errorType** | [**String**](string.md) | | [optional] [default to null] |\n| **description** | [**String**](string.md) | | [optional] [default to null] |\n\n[[Back to Model list]](/pages/backbonecabal/knowledgebase/api/#documentation-for-models) [[Back to API list]](/pages/backbonecabal/knowledgebase/api/#documentation-for-api-endpoints) [[Back to README]](/pages/backbonecabal/knowledgebase/api/)\n","dir":"/api/Models/","name":"OrderPostError.md","path":"api/Models/OrderPostError.md","url":"/api/Models/OrderPostError.html"},{"layout":"default","title":"OrderType","content":"# OrderType\n\n## Properties\n\n| Name | Type | Description | Notes |\n| ---- | ---- | ----------- | ----- |\n\n[[Back to Model list]](/pages/backbonecabal/knowledgebase/api/#documentation-for-models) [[Back to API list]](/pages/backbonecabal/knowledgebase/api/#documentation-for-api-endpoints) [[Back to README]](/pages/backbonecabal/knowledgebase/api/)\n","dir":"/api/Models/","name":"OrderType.md","path":"api/Models/OrderType.md","url":"/api/Models/OrderType.html"},{"layout":"default","title":"Trade","content":"# Trade\n\n## Properties\n\n| Name | Type | Description | Notes |\n| ------------------------ | ------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | ---------------------------- |\n| **blockNumber** | [**Integer**](integer.md) | Block in which trade occurred. | [optional] [default to null] |\n| **logIndex** | [**Integer**](integer.md) | Index in which transaction was included in block. | [optional] [default to null] |\n| **orderUid** | [**String**](string.md) | Unique identifier for the order: 56 bytes encoded as hex with &#x60;0x&#x60; prefix. Bytes 0 to 32 are the order digest, bytes 30 to 52 the owner address and bytes 52..56 valid to, | [optional] [default to null] |\n| **owner** | [**String**](string.md) | Ethereum 40 byte address encoded as a hex with &#x60;0x&#x60; prefix. | [optional] [default to null] |\n| **sellToken** | [**String**](string.md) | Ethereum 40 byte address encoded as a hex with &#x60;0x&#x60; prefix. | [optional] [default to null] |\n| **buyToken** | [**String**](string.md) | Ethereum 40 byte address encoded as a hex with &#x60;0x&#x60; prefix. | [optional] [default to null] |\n| **sellAmount** | [**String**](string.md) | Amount of a token. uint256 encoded in decimal. | [optional] [default to null] |\n| **sellAmountBeforeFees** | [**String**](string.md) | A big unsigned integer encoded in decimal. | [optional] [default to null] |\n| **buyAmount** | [**String**](string.md) | Amount of a token. uint256 encoded in decimal. | [optional] [default to null] |\n\n[[Back to Model list]](/pages/backbonecabal/knowledgebase/api/#documentation-for-models) [[Back to API list]](/pages/backbonecabal/knowledgebase/api/#documentation-for-api-endpoints) [[Back to README]](/pages/backbonecabal/knowledgebase/api/)\n","dir":"/api/Models/","name":"Trade.md","path":"api/Models/Trade.md","url":"/api/Models/Trade.html"},{"layout":"default","title":"Order","content":"# Order\n\n## Properties\n\n| Name | Type | Description | Notes |\n| -------------------------------- | ---------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | ---------------------------- |\n| **sellToken** | [**String**](string.md) | Ethereum 40 byte address encoded as a hex with &#x60;0x&#x60; prefix. | [optional] [default to null] |\n| **buyToken** | [**String**](string.md) | Ethereum 40 byte address encoded as a hex with &#x60;0x&#x60; prefix. | [optional] [default to null] |\n| **sellAmount** | [**String**](string.md) | Amount of a token. uint256 encoded in decimal. | [optional] [default to null] |\n| **buyAmount** | [**String**](string.md) | Amount of a token. uint256 encoded in decimal. | [optional] [default to null] |\n| **validTo** | [**Integer**](integer.md) | Unix timestamp until the order is valid. uint32. | [optional] [default to null] |\n| **appData** | [**Integer**](integer.md) | Arbitrary identifier sent along with the order. Could be used to track the interface or other meta-aspects of the order. uint32 encoded | [optional] [default to null] |\n| **feeAmount** | [**String**](string.md) | Amount of a token. uint256 encoded in decimal. | [optional] [default to null] |\n| **kind** | [**OrderType**](/pages/backbonecabal/knowledgebase/api/OrderType.html) | | [optional] [default to null] |\n| **partiallyFillable** | [**Boolean**](boolean.md) | Is this a fill-or-kill order or a partially fillable order? | [optional] [default to null] |\n| **Signature** | [**oas_any_type_not_mapped**](.md) | 65 bytes encoded as hex with &#x60;0x&#x60; prefix. r + s + v from the spec. | [optional] [default to null] |\n| **creationTime** | [**String**](string.md) | Creation time of the order. Encoded as ISO 8601 UTC. | [optional] [default to null] |\n| **owner** | [**String**](string.md) | Ethereum 40 byte address encoded as a hex with &#x60;0x&#x60; prefix. | [optional] [default to null] |\n| **UID** | [**String**](string.md) | Unique identifier for the order: 56 bytes encoded as hex with &#x60;0x&#x60; prefix. Bytes 0 to 32 are the order digest, bytes 30 to 52 the owner address and bytes 52..56 valid to, | [optional] [default to null] |\n| **availableBalance** | [**String**](string.md) | Amount of a token. uint256 encoded in decimal. | [optional] [default to null] |\n| **executedSellAmount** | [**String**](string.md) | A big unsigned integer encoded in decimal. | [optional] [default to null] |\n| **executedSellAmountBeforeFees** | [**String**](string.md) | A big unsigned integer encoded in decimal. | [optional] [default to null] |\n| **executedBuyAmount** | [**String**](string.md) | A big unsigned integer encoded in decimal. | [optional] [default to null] |\n| **executedFeeAmount** | [**String**](string.md) | A big unsigned integer encoded in decimal. | [optional] [default to null] |\n| **invalidated** | [**Boolean**](boolean.md) | Has this order been invalidated? | [optional] [default to null] |\n\n[[Back to Model list]](/pages/backbonecabal/knowledgebase/#documentation-for-models) [[Back to API list]](/pages/backbonecabal/knowledgebase/#documentation-for-api-endpoints) [[Back to README]](/pages/backbonecabal/knowledgebase/)\n","dir":"/api/","name":"Order.md","path":"api/Order.md","url":"/api/Order.html"},{"layout":"default","title":"OrderCancellation","content":"# OrderCancellation\n\n## Properties\n\n| Name | Type | Description | Notes |\n| ------------- | ---------------------------------- | ---------------------------------------------------------------------------- | ---------------------------- |\n| **signature** | [**oas_any_type_not_mapped**](.md) | 65 bytes encoded as hex with &#x60;0x&#x60; prefix. r + s + v from the spec. | [optional] [default to null] |\n\n[[Back to Model list]](/pages/backbonecabal/knowledgebase/#documentation-for-models) [[Back to API list]](/pages/backbonecabal/knowledgebase/#documentation-for-api-endpoints) [[Back to README]](/pages/backbonecabal/knowledgebase/)\n","dir":"/api/","name":"OrderCancellation.md","path":"api/OrderCancellation.md","url":"/api/OrderCancellation.html"},{"layout":"default","title":"OrderCancellationError","content":"# OrderCancellationError\n\n## Properties\n\n| Name | Type | Description | Notes |\n| --------------- | ----------------------- | ----------- | ---------------------------- |\n| **errorType** | [**String**](string.md) | | [optional] [default to null] |\n| **description** | [**String**](string.md) | | [optional] [default to null] |\n\n[[Back to Model list]](/pages/backbonecabal/knowledgebase/#documentation-for-models) [[Back to API list]](/pages/backbonecabal/knowledgebase/#documentation-for-api-endpoints) [[Back to README]](/pages/backbonecabal/knowledgebase/)\n","dir":"/api/","name":"OrderCancellationError.md","path":"api/OrderCancellationError.md","url":"/api/OrderCancellationError.html"},{"layout":"default","title":"OrderCreation","content":"# OrderCreation\n\n## Properties\n\n| Name | Type | Description | Notes |\n| --------------------- | ---------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------- | ---------------------------- |\n| **sellToken** | [**String**](string.md) | Ethereum 40 byte address encoded as a hex with &#x60;0x&#x60; prefix. | [optional] [default to null] |\n| **buyToken** | [**String**](string.md) | Ethereum 40 byte address encoded as a hex with &#x60;0x&#x60; prefix. | [optional] [default to null] |\n| **sellAmount** | [**String**](string.md) | Amount of a token. uint256 encoded in decimal. | [optional] [default to null] |\n| **buyAmount** | [**String**](string.md) | Amount of a token. uint256 encoded in decimal. | [optional] [default to null] |\n| **validTo** | [**Integer**](integer.md) | Unix timestamp until the order is valid. uint32. | [optional] [default to null] |\n| **appData** | [**Integer**](integer.md) | Arbitrary identifier sent along with the order. Could be used to track the interface or other meta-aspects of the order. uint32 encoded | [optional] [default to null] |\n| **feeAmount** | [**String**](string.md) | Amount of a token. uint256 encoded in decimal. | [optional] [default to null] |\n| **kind** | [**OrderType**](/pages/backbonecabal/knowledgebase/api/OrderType.html) | | [optional] [default to null] |\n| **partiallyFillable** | [**Boolean**](boolean.md) | Is this a fill-or-kill order or a partially fillable order? | [optional] [default to null] |\n| **Signature** | [**oas_any_type_not_mapped**](.md) | 65 bytes encoded as hex with &#x60;0x&#x60; prefix. r + s + v from the spec. | [optional] [default to null] |\n\n[[Back to Model list]](/pages/backbonecabal/knowledgebase/#documentation-for-models) [[Back to API list]](/pages/backbonecabal/knowledgebase/#documentation-for-api-endpoints) [[Back to README]](/pages/backbonecabal/knowledgebase/)\n","dir":"/api/","name":"OrderCreation.md","path":"api/OrderCreation.md","url":"/api/OrderCreation.html"},{"layout":"default","title":"OrderMetaData","content":"# OrderMetaData\n\n## Properties\n\n| Name | Type | Description | Notes |\n| -------------------------------- | ------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | ---------------------------- |\n| **creationTime** | [**String**](string.md) | Creation time of the order. Encoded as ISO 8601 UTC. | [optional] [default to null] |\n| **owner** | [**String**](string.md) | Ethereum 40 byte address encoded as a hex with &#x60;0x&#x60; prefix. | [optional] [default to null] |\n| **UID** | [**String**](string.md) | Unique identifier for the order: 56 bytes encoded as hex with &#x60;0x&#x60; prefix. Bytes 0 to 32 are the order digest, bytes 30 to 52 the owner address and bytes 52..56 valid to, | [optional] [default to null] |\n| **availableBalance** | [**String**](string.md) | Amount of a token. uint256 encoded in decimal. | [optional] [default to null] |\n| **executedSellAmount** | [**String**](string.md) | A big unsigned integer encoded in decimal. | [optional] [default to null] |\n| **executedSellAmountBeforeFees** | [**String**](string.md) | A big unsigned integer encoded in decimal. | [optional] [default to null] |\n| **executedBuyAmount** | [**String**](string.md) | A big unsigned integer encoded in decimal. | [optional] [default to null] |\n| **executedFeeAmount** | [**String**](string.md) | A big unsigned integer encoded in decimal. | [optional] [default to null] |\n| **invalidated** | [**Boolean**](boolean.md) | Has this order been invalidated? | [optional] [default to null] |\n\n[[Back to Model list]](/pages/backbonecabal/knowledgebase/#documentation-for-models) [[Back to API list]](/pages/backbonecabal/knowledgebase/#documentation-for-api-endpoints) [[Back to README]](/pages/backbonecabal/knowledgebase/)\n","dir":"/api/","name":"OrderMetaData.md","path":"api/OrderMetaData.md","url":"/api/OrderMetaData.html"},{"layout":"default","title":"OrderType","content":"# OrderType\n\n## Properties\n\n| Name | Type | Description | Notes |\n| ---- | ---- | ----------- | ----- |\n\n[[Back to Model list]](/pages/backbonecabal/knowledgebase/#documentation-for-models) [[Back to API list]](/pages/backbonecabal/knowledgebase/#documentation-for-api-endpoints) [[Back to README]](/pages/backbonecabal/knowledgebase/)\n","dir":"/api/","name":"OrderType.md","path":"api/OrderType.md","url":"/api/OrderType.html"},{"layout":"default","title":"Trade","content":"# Trade\n\n## Properties\n\n| Name | Type | Description | Notes |\n| ------------------------ | ------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | ---------------------------- |\n| **blockNumber** | [**Integer**](integer.md) | Block in which trade occurred. | [optional] [default to null] |\n| **logIndex** | [**Integer**](integer.md) | Index in which transaction was included in block. | [optional] [default to null] |\n| **orderUid** | [**String**](string.md) | Unique identifier for the order: 56 bytes encoded as hex with &#x60;0x&#x60; prefix. Bytes 0 to 32 are the order digest, bytes 30 to 52 the owner address and bytes 52..56 valid to, | [optional] [default to null] |\n| **owner** | [**String**](string.md) | Ethereum 40 byte address encoded as a hex with &#x60;0x&#x60; prefix. | [optional] [default to null] |\n| **sellToken** | [**String**](string.md) | Ethereum 40 byte address encoded as a hex with &#x60;0x&#x60; prefix. | [optional] [default to null] |\n| **buyToken** | [**String**](string.md) | Ethereum 40 byte address encoded as a hex with &#x60;0x&#x60; prefix. | [optional] [default to null] |\n| **sellAmount** | [**String**](string.md) | Amount of a token. uint256 encoded in decimal. | [optional] [default to null] |\n| **sellAmountBeforeFees** | [**String**](string.md) | A big unsigned integer encoded in decimal. | [optional] [default to null] |\n| **buyAmount** | [**String**](string.md) | Amount of a token. uint256 encoded in decimal. | [optional] [default to null] |\n\n[[Back to Model list]](/pages/backbonecabal/knowledgebase/#documentation-for-models) [[Back to API list]](/pages/backbonecabal/knowledgebase/#documentation-for-api-endpoints) [[Back to README]](/pages/backbonecabal/knowledgebase/)\n","dir":"/api/","name":"Trade.md","path":"api/Trade.md","url":"/api/Trade.html"},{"layout":"default","title":"OrderPostError","content":"# OrderPostError\n\n## Properties\n\n| Name | Type | Description | Notes |\n| --------------- | ----------------------- | ----------- | ---------------------------- |\n| **errorType** | [**String**](string.md) | | [optional] [default to null] |\n| **description** | [**String**](string.md) | | [optional] [default to null] |\n\n[[Back to Model list]](/pages/backbonecabal/knowledgebase/#documentation-for-models) [[Back to API list]](/pages/backbonecabal/knowledgebase/#documentation-for-api-endpoints) [[Back to README]](/pages/backbonecabal/knowledgebase/)\n","dir":"/api/","name":"OrderPostError.md","path":"api/OrderPostError.md","url":"/api/OrderPostError.html"},{"sort":1,"layout":"default","title":"Sushiswap Proposal","content":"<h1 id=\"sushiswap-proposal\">Sushiswap Proposal</h1>\n\n<blockquote>\n <p>MEV Strategy for enabling reduced transaction costs and capturing platform arbitrage</p>\n</blockquote>\n\n<p>This is a strategy that realizes profit by smart transaction batching\nfor the purposes of arbitrage by controlling transaction ordering.</p>\n\n<p>Right now every user sends a transaction directly to the network mempool\nand thus give away the arbitrage, front-running, back-running\nopportunities to miners(or random bots).</p>\n\n<p>YCabal creates a virtualized mempool (i.e. a MEV-relay network) that\naggregates transactions (batching), such transactions include:</p>\n\n<p>DEX trades <br /> Interactions with protocols <br /> Auctions <br /> etc <br /></p>\n\n<h2 id=\"efficiency-by-aggregation\">Efficiency by Aggregation</h2>\n\n<p>By leveraging batching, miner transaction flow, and providing additional\nperformant utilities (e.g. faster calculations for finalizing), we can\nrealize the following potential avenues for realizing profitable\nactivites:</p>\n\n<ul>\n <li>Meta Transaction Funtionality</li>\n <li>Order trades in different directions sequentially to produce positive\nslippage</li>\n <li>Backrun Trades</li>\n <li>Frontrun Trades</li>\n <li>At least 21k in the base cost on every transaction is saved</li>\n</ul>\n\n<blockquote>\n <p><strong>If we have access to transactions before the network we can generate\nvalue because we can calculate future state, off-chain</strong></p>\n</blockquote>\n\n<blockquote>\n <p>Think of this as creating a Netting Settlement System (whereas\nblockchains are a real time gross settlement system)</p>\n</blockquote>\n\n<h2 id=\"user-capture\">User Capture</h2>\n\n<p>The whole point of Backbone Cabal is to maximize profits from user\nactions which gets distributed for free to miners and bots. We intent to\nextract this value and provide these profits as <code class=\"language-plaintext highlighter-rouge\">**cashback**</code> to users.</p>\n\n<p><strong>For example</strong>: A SushiSwap trader who loses <code class=\"language-plaintext highlighter-rouge\">X%</code> to slippage during\nhis trade can now get <code class=\"language-plaintext highlighter-rouge\">X-Y %</code> slippage on his trade, because we were\nable to backrun his trade and give him the arbitrage profits.</p>\n\n<p>Backbone Cabal gets better and better as more transactions flow because\nthere is less uncertaintity about the future state of the network.</p>\n\n<h3 id=\"gas-free-trading\">Gas Free Trading</h3>\n\n<ul>\n <li>SushiSwap as an example</li>\n</ul>\n\n<h3 id=\"rebates\">Rebates</h3>\n\n<p>Profits can be rebated to end users</p>\n\n<h3 id=\"volume-mining\">Volume Mining</h3>\n\n<p>Other protocols can join the network and turn their transaction flow\ninto a book of bussines with our network of participants</p>\n\n<p><br /></p>\n\n<h3 id=\"skimaddress\"><code class=\"language-plaintext highlighter-rouge\">skim(address)</code></h3>\n\n<blockquote>\n <p>UniSwapV2</p>\n</blockquote>\n\n<p><a href=\"https://github.com/Uniswap/uniswap-v2-core/blob/master/contracts/UniswapV2Pair.sol#L190-L195\">skim<strong>address</strong></a>\nlets anyone claim a positive discrepancy between the actual token\nbalance in the contract and the reserve number stored in the Pair\ncontract.</p>\n\n<h2 id=\"solution-set\">Solution Set</h2>\n\n<p>ArcherDAO <br /> Manifold Finance <br /> Kafka based JSON RPC and API\nGateway <br /> kdb+ <br /></p>\n\n<h2 id=\"attack-vectors-against-the-backbone\">Attack Vectors against the Backbone</h2>\n\n<p>DDoS <br /> Exploits <br /> Additional Disclosures forthcoming <br /></p>\n\n<h2 id=\"ecosystem-benefits\">Ecosystem Benefits</h2>\n\n<ul>\n <li>Can act as a failover web3 provider (e.g. Infura/AlchemyAPI outage)</li>\n <li>Transaction Monitoring</li>\n <li>Security Operations for Contracts</li>\n</ul>\n\n<h3 id=\"user-example\">User Example</h3>\n\n<p>Proposed end-user transaction example for interacting with the YCabal</p>\n\n<div class=\"language-jsx highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nx\">order</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n <span class=\"na\">Give</span><span class=\"p\">:</span> <span class=\"nx\">ETH</span><span class=\"p\">,</span>\n <span class=\"na\">Want</span><span class=\"p\">:</span> <span class=\"nx\">DAI</span><span class=\"p\">,</span>\n <span class=\"na\">SlippageLimit</span><span class=\"p\">:</span> <span class=\"mi\">10</span><span class=\"o\">%</span><span class=\"p\">,</span>\n <span class=\"na\">Amount</span><span class=\"p\">:</span> <span class=\"mi\">1000</span><span class=\"nx\">ETH</span><span class=\"p\">,</span>\n <span class=\"na\">Cabal</span><span class=\"p\">:</span> <span class=\"mh\">0xabc</span><span class=\"p\">...,</span>\n <span class=\"na\">FeesIn</span><span class=\"p\">:</span> <span class=\"nx\">DAI</span><span class=\"p\">,</span>\n <span class=\"na\">TargetDEX</span><span class=\"p\">:</span> <span class=\"nx\">SushiSwap</span><span class=\"p\">,</span>\n <span class=\"na\">Deadline</span><span class=\"p\">:</span> <span class=\"nx\">time</span><span class=\"p\">.</span><span class=\"nx\">Now</span><span class=\"p\">()</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"o\">*</span><span class=\"nx\">time</span><span class=\"p\">.</span><span class=\"nx\">Minute</span>\n <span class=\"na\">Signature</span><span class=\"p\">:</span> <span class=\"nx\">sign</span><span class=\"p\">(</span><span class=\"nx\">order</span><span class=\"p\">.</span><span class=\"nx\">SignBytes</span><span class=\"p\">())</span>\n<span class=\"p\">}</span>\n</code></pre>  </div></div>\n\n<p>Now if the Cabal broadcasts this transaction with a arbitrage order, the\ntransaction contains 2 orders:</p>\n\n<blockquote>\n <p>Note: the transaction below is a mock up for the proposed <em>data\nfields</em></p>\n</blockquote>\n\n<div class=\"language-jsx highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nx\">transactions</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n <span class=\"p\">{</span>\n  <span class=\"na\">Give</span><span class=\"p\">:</span> <span class=\"nx\">ETH</span><span class=\"p\">,</span>\n  <span class=\"na\">Want</span><span class=\"p\">:</span> <span class=\"nx\">DAI</span><span class=\"p\">,</span>\n  <span class=\"na\">SlippageLimit</span><span class=\"p\">:</span> <span class=\"mi\">10</span><span class=\"o\">%</span><span class=\"p\">,</span>\n  <span class=\"na\">Amount</span><span class=\"p\">:</span> <span class=\"mi\">1000</span><span class=\"nx\">ETH</span><span class=\"p\">,</span>\n  <span class=\"na\">Cabal</span><span class=\"p\">:</span> <span class=\"mh\">0xabc</span><span class=\"p\">...,</span>\n  <span class=\"na\">FeesIn</span><span class=\"p\">:</span> <span class=\"nx\">DAI</span><span class=\"p\">,</span>\n  <span class=\"na\">TargetDEX</span><span class=\"p\">:</span> <span class=\"nx\">SushiSwap</span><span class=\"p\">,</span>\n  <span class=\"na\">Deadline</span><span class=\"p\">:</span> <span class=\"nx\">time</span><span class=\"p\">.</span><span class=\"nx\">Now</span><span class=\"p\">()</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"o\">*</span><span class=\"nx\">time</span><span class=\"p\">.</span><span class=\"nx\">Minute</span>\n  <span class=\"na\">Signature</span><span class=\"p\">:</span> <span class=\"nx\">sign</span><span class=\"p\">(</span><span class=\"nx\">order</span><span class=\"p\">.</span><span class=\"nx\">SignBytes</span><span class=\"p\">())</span>\n <span class=\"p\">},</span>\n <span class=\"p\">{</span>\n  <span class=\"na\">Give</span><span class=\"p\">:</span> <span class=\"nx\">DAI</span><span class=\"p\">,</span>\n  <span class=\"na\">Want</span><span class=\"p\">:</span> <span class=\"nx\">ETH</span><span class=\"p\">,</span>\n  <span class=\"na\">SlippageLimit</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"o\">%</span><span class=\"p\">,</span>\n  <span class=\"na\">Amount</span><span class=\"p\">:</span> <span class=\"mi\">10</span><span class=\"nx\">ETH</span><span class=\"p\">,</span>\n  <span class=\"na\">Cabal</span><span class=\"p\">:</span> <span class=\"mh\">0xabc</span><span class=\"p\">...,</span>\n  <span class=\"na\">FeesIn</span><span class=\"p\">:</span> <span class=\"nx\">DAI</span><span class=\"p\">,</span>\n  <span class=\"na\">TargetDEX</span><span class=\"p\">:</span> <span class=\"nx\">SushiSwap</span><span class=\"p\">,</span>\n  <span class=\"na\">Deadline</span><span class=\"p\">:</span> <span class=\"nx\">time</span><span class=\"p\">.</span><span class=\"nx\">Now</span><span class=\"p\">()</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"o\">*</span><span class=\"nx\">time</span><span class=\"p\">.</span><span class=\"nx\">Minute</span>\n  <span class=\"na\">Signature</span><span class=\"p\">:</span> <span class=\"nx\">sign</span><span class=\"p\">(</span><span class=\"nx\">order</span><span class=\"p\">.</span><span class=\"nx\">SignBytes</span><span class=\"p\">()),</span>\n  <span class=\"nx\">IsBackbone</span> <span class=\"na\">Cabal</span><span class=\"p\">:</span> <span class=\"kc\">true</span><span class=\"p\">,</span>\n  <span class=\"na\">TransferProfitTo</span><span class=\"p\">:</span> <span class=\"nx\">transactions</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">].</span><span class=\"nx\">signer</span>\n <span class=\"p\">}</span>\n<span class=\"p\">]</span>\n</code></pre>  </div></div>\n\n<p>The arbitrage profit generated by second order is sent to the\n<code class=\"language-plaintext highlighter-rouge\">msg.sender</code> of the first order.</p>\n\n<p>The first order will still lose 5%(assumption) in slippage.</p>\n\n<p>Arbitrage profits will rarely be more than the slippage loss.</p>\n\n<p>If someone front runs the transaction sent by the Cabal:</p>\n\n<ol>\n <li>They pay for the gas while post confirmation of transaction the fees\nfor order1 goes to the relayer in the signed order.</li>\n <li>They lose 5% in slippage as our real user does.</li>\n</ol>\n\n<h2 id=\"engine\">Engine</h2>\n\n<p>YCabal uses a batch auction-based matching engine to execute orders.\nBatch auctions were chosen to reduce the impact of frontrunning on the\nexchange.</p>\n\n<ol>\n <li>\n <p>All orders for the given market are collected.</p>\n </li>\n <li>\n <p>Orders beyond their time-in-force are cancelled.</p>\n </li>\n <li>\n <p>Orders are placed into separate lists by market side, and aggregate\nsupply and demand curves are calculated.</p>\n </li>\n <li>\n <p>The matching engine discovers the price at which the aggregate supply\nand demand curves cross, which yields the clearing price. If there is\na horizontal cross - i.e., two prices for which aggregate supply and\ndemand are equal - then the clearing price is the midpoint between\nthe two prices.</p>\n </li>\n <li>\n <p>If both sides of the market have equal volume, then all orders are\ncompletely filled. If one side has more volume than the other, then\nthe side with higher volume is rationed pro-rata based on how much\nits volume exceeds the other side. For example, if aggregate demand\nis 100 and aggregate supply is 90, then every order on the demand\nside of the market will be matched 90%.</p>\n </li>\n</ol>\n\n<p>Orders are sorted based on their price, and order ID. Order IDs are\ngenerated at post time, and is the only part of the matching engine that\nis time-dependent. However, the oldest order IDs are matched first so\nthere is no incentive to post an order ahead of someone else’s.</p>\n\n<h4 id=\"relative-mining-gain\">Relative mining gain</h4>\n\n<p>(RMG) as the objective function for blockchain mining:</p>\n\n\\[R M G=E\\left[\\lim _{T \\rightarrow \\infty} \\frac{\\sum_{\\tau=t}^{t+T-1} r_{\\tau+1}^{(a)}}{\\sum_{\\tau=t}^{t+T-1} r_{\\tau+1}^{(a)}+\\sum_{\\tau=t}^{t+T-1} r_{\\tau+1}^{(h)}}\\right]\\]\n\n<h4 id=\"tuple-of-rewards-issued-in-block-interval\">Tuple of rewards issued in block interval</h4>\n\n\\[\\left(r_{t}^{(a)}, r_{t}^{(h)}\\right)\\]\n\n<p>The tuple of rewards issued in the block interval \\(t, T\\) is the size\nof the observing window. The objective of the adversary is to maximize\nthis relative mining gain.</p>\n\n<p>A <strong>mined block interval</strong> is different from a valid block interval. A\nvalid block interval separates two valid blocks that are ultimately\nadopted by the bl ockchain.</p>\n\n<p>The average duration of a valid block interval is a constant in many\nblockchain systems (e.g., 10 min in bitcoin). The average duration of\nthe <strong>valid block interval</strong> is deﬁned by the system designer and its\nconstancy is maintained by adjusting the mining target. A mined block\ninterval separated two mined (by either the adversary of the honest\nnetwork), regardless of whether the blocks becomes valid later.</p>\n\n<ul>\n <li>valid block interval</li>\n <li>mined block interval</li>\n</ul>\n\n<h3 id=\"defining-driver-nodes\">Defining ‘driver’ nodes</h3>\n\n<blockquote>\n <p>These are points in the network graph in which they have a critical\nposition</p>\n</blockquote>\n\n\\[\\frac{d m (t)}{d t}=A m (t)+B u (t)\\]\n\n<p>Where $m (t)=\\left(m_{1}(t), \\ldots m_{N}(t)\\right)^{T}$ are the\nbalances of the mining addresses of the system, $A$ is an $N \\times N$\nmatrix that defines the strength of the economic relationships between\nminers.</p>\n\n<p>$B$ is an $N \\times M(M \\leq N)$ matrix that identifies which of the\n(driver) nodes are controlled by an external controller via a\ntime-dependent vector</p>\n\n<p>$u (t)=\\left(u_{1}(t), \\ldots u_{M}(t)\\right)^{T}$</p>\n\n<p>This analysis showes that the minimum number of driver nodes needed to\ncontrol the system described above is exactly the set of ’unmatched\nnodes’ for a ’maximum matching’ as long as all there are paths from the\nunmatched nodes to the matched ones. A ’maximum matching’ is the maximal\nset of edges that do not share start or end nodes, while a node is said\nto be matched if an edge in the ’maximum matching’ points to it;\notherwise, it is said to be unmatched. Our results yield that under this\nmodel and given the topology of the transaction network, 1, 945 nodes of\nthe GWCC would need to be controlled (47% of the hashing power of the\nGWCC), in order to potentially have full control over it.</p>\n\n<h3 id=\"block-extrracted-value--miner-extracted-value\">Block Extrracted Value / Miner Extracted Value</h3>\n\n<p>Transactions are not actually independent: it may be necessary to\ninclude some less-profitable or even unprofitable transactions to\nincrease the profitability of a subsequent transaction.</p>\n\n<p>For example, since transactions include a per-sender sequence number,\nand these must be applied in strictly incrementing order, the miner\ncould be faced with one high-cost low-income transaction (from=ABC\nseqnum=5), followed by a low-cost high-income transaction (from=ABC\nseqnum=6). The miner cannot legally include the second message without\nalso including the first. They must evaluate the profitability of the\ntwo as an indivisible pair.</p>\n\n<p>Adjusting the order of different-sender messages may improve profits.\nSince exceptions forfeit all gas to the miner, if there is an ordering\nof messages that forces an exception, the miner would prefer\nexception-causing sequences over ones that complete normally. Likewise,\na sequence that causes execution to consume more gas will yield more\nincome than one which completes quickly (and more profit, assuming the\nactual CPU costs are low). So, more sophisticated miners may do more\nwork: computing an optimal ordered subset, not merely an optimal subset.</p>\n\n<p>The costs of doing this analysis must not exceed the gains to be had.\nFinding an optimal ordered subset is even more expensive (O(n!)) than an\nunordered subset, but clever miners may find ways to make it worthwhile.\nThese miners would like enough information to efficiently choose a\nprofit-optimal ordered subset of the available messages.</p>\n\n<p>Ethereum may benefit from mechanisms that allow a client to make a clear\npromise of income to the miners. This may take the form of a min_gas\nmessage parameter, which would make no promises about the execution\nruntime, but would guarantee a minimum income for the miner. If the\npotential CPU cost are low enough, this might provide enough information\nto allow miners to prioritize transactions appropriately.</p>\n\n<h2 id=\"links\">Links</h2>\n\n<p><a href=\"https://backbone-rpc.netlify.app/\">Manifold RPC Inspector for Backbone Cabal</a></p>\n\n<p><a href=\"https://ybackbone.netlify.app/\">Provisional Public API</a></p>\n\n<p>Characterizing relationships between primary miners in Ethereum by\nanalyzing on-chain transactions</p>\n\n<ul>\n <li>arXiv:2010.07781v1 [cs.SI] 8 Oct 2020</li>\n</ul>\n\n<p>Quantifying Blockchain Extractable Value: How dark is the forest?</p>\n\n<ul>\n <li>\n <p>arXiv:2101.05511v2 [cs.CR] 15 Jan 2021</p>\n </li>\n <li><a href=\"/pages/backbonecabal/knowledgebase/proposal.html\">Sushiswap Proposal</a></li>\n <li><a href=\"/pages/backbonecabal/knowledgebase/benefits.html\">Benefits</a></li>\n <li><a href=\"/pages/backbonecabal/knowledgebase/refunder.html\">Proxy Gas Refunder</a></li>\n <li><a href=\"/pages/backbonecabal/knowledgebase/directory.html\">Directory</a></li>\n <li><a href=\"/pages/backbonecabal/knowledgebase/trade-settlement.html\">Trade and Settlement</a></li>\n <li><a href=\"/pages/backbonecabal/knowledgebase/suspensions.html\">Suspension and Disciplinary Proceedings</a></li>\n <li><a href=\"/pages/backbonecabal/knowledgebase/obligations.html\">Obligations</a></li>\n <li><a href=\"/pages/backbonecabal/knowledgebase/technical.html\">Technical Overview</a></li>\n <li><a href=\"/pages/backbonecabal/knowledgebase/limit_order_books.html\">Limit Order Books</a></li>\n <li><a href=\"/pages/backbonecabal/knowledgebase/roadmap.html\">Roadmap</a></li>\n <li><a href=\"/pages/backbonecabal/knowledgebase/web3modal.html\">Backbone Cabal rpc connect protocol (Web3 RPC Network)</a></li>\n</ul>\n","dir":"/","name":"proposal.md","path":"proposal.md","url":"/proposal.html"},{"sort":2,"layout":"default","title":"Benefits","content":"<h1 id=\"benefits\">Benefits</h1>\n\n<p>If you want to list all <code class=\"language-plaintext highlighter-rouge\">pages</code> in the current directory, add following code to your markdown file!</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>{% include list.liquid %}\n</code></pre>  </div></div>\n\n<p>Then Generate a list like this:</p>\n\n<ul>\n <li><a href=\"/pages/backbonecabal/knowledgebase/proposal.html\">Sushiswap Proposal</a></li>\n <li><a href=\"/pages/backbonecabal/knowledgebase/benefits.html\">Benefits</a></li>\n <li><a href=\"/pages/backbonecabal/knowledgebase/refunder.html\">Proxy Gas Refunder</a></li>\n <li><a href=\"/pages/backbonecabal/knowledgebase/directory.html\">Directory</a></li>\n <li><a href=\"/pages/backbonecabal/knowledgebase/trade-settlement.html\">Trade and Settlement</a></li>\n <li><a href=\"/pages/backbonecabal/knowledgebase/suspensions.html\">Suspension and Disciplinary Proceedings</a></li>\n <li><a href=\"/pages/backbonecabal/knowledgebase/obligations.html\">Obligations</a></li>\n <li><a href=\"/pages/backbonecabal/knowledgebase/technical.html\">Technical Overview</a></li>\n <li><a href=\"/pages/backbonecabal/knowledgebase/limit_order_books.html\">Limit Order Books</a></li>\n <li><a href=\"/pages/backbonecabal/knowledgebase/roadmap.html\">Roadmap</a></li>\n <li><a href=\"/pages/backbonecabal/knowledgebase/web3modal.html\">Backbone Cabal rpc connect protocol (Web3 RPC Network)</a></li>\n</ul>\n\n<p>If you want to list all <code class=\"language-plaintext highlighter-rouge\">pages and sub directory</code> in the current directory, add following code to your markdown file!</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>{% include list.liquid all=true %}\n</code></pre>  </div></div>\n\n<p>Then Generate a list like this <a href=\"/pages/backbonecabal/knowledgebase/docs/\">table of contents</a>!</p>\n","dir":"/","name":"benefits.md","path":"benefits.md","url":"/benefits.html"},{"sort":3,"permalink":"/api/","layout":"default","title":"SushiSwap User API","content":"<h1 id=\"sushiswap-user-api\">SushiSwap User API</h1>\n\n<blockquote>\n <p>Documentation for Order Book API</p>\n</blockquote>\n\n<ul>\n <li><a href=\"/pages/backbonecabal/knowledgebase/api/FeeInformation.html\">FeeInformation</a></li>\n <li><a href=\"/pages/backbonecabal/knowledgebase/api/Order.html\">Order</a></li>\n <li><a href=\"/pages/backbonecabal/knowledgebase/api/OrderCancellation.html\">OrderCancellation</a></li>\n <li><a href=\"/pages/backbonecabal/knowledgebase/api/OrderCancellationError.html\">OrderCancellationError</a></li>\n <li><a href=\"/pages/backbonecabal/knowledgebase/api/OrderCreation.html\">OrderCreation</a></li>\n <li><a href=\"/pages/backbonecabal/knowledgebase/api/OrderMetaData.html\">OrderMetaData</a></li>\n <li><a href=\"/pages/backbonecabal/knowledgebase/api/OrderType.html\">OrderType</a></li>\n <li><a href=\"/pages/backbonecabal/knowledgebase/api/Trade.html\">Trade</a></li>\n <li><a href=\"/pages/backbonecabal/knowledgebase/api/OrderPostError.html\">OrderPostError</a></li>\n <li><a href=\"/pages/backbonecabal/knowledgebase/api/Apis/\">API Overview</a></li>\n</ul>\n\n<h2 id=\"documentation-for-api-endpoints\">Documentation for API Endpoints</h2>\n\n<p>All URIs are relative to <em>https://sushi.backbonecabal.xyz</em></p>\n\n<table>\n <thead>\n <tr>\n <th>Class</th>\n <th>Method</th>\n <th>HTTP request</th>\n <th>Description</th>\n </tr>\n </thead>\n <tbody>\n <tr>\n <td><em>DefaultApi</em></td>\n <td><a href=\"Apis/DefaultApi.md#apiv1ordersget\"><strong>apiV1OrdersGet</strong></a></td>\n <td><strong>GET</strong> /api/v1/orders</td>\n <td>Get existing orders.</td>\n </tr>\n <tr>\n <td><em>DefaultApi</em></td>\n <td><a href=\"Apis/DefaultApi.md#apiv1orderspost\"><strong>apiV1OrdersPost</strong></a></td>\n <td><strong>POST</strong> /api/v1/orders</td>\n <td>Create a new order.</td>\n </tr>\n <tr>\n <td><em>DefaultApi</em></td>\n <td><a href=\"Apis/DefaultApi.md#apiv1ordersuiddelete\"><strong>apiV1OrdersUIDDelete</strong></a></td>\n <td><strong>DELETE</strong> /api/v1/orders/{UID}</td>\n <td>Cancels order by marking it invalid with a timestamp.</td>\n </tr>\n <tr>\n <td><em>DefaultApi</em></td>\n <td><a href=\"Apis/DefaultApi.md#apiv1ordersuidget\"><strong>apiV1OrdersUIDGet</strong></a></td>\n <td><strong>GET</strong> /api/v1/orders/{UID}</td>\n <td>Get existing order from UID.</td>\n </tr>\n <tr>\n <td><em>DefaultApi</em></td>\n <td><a href=\"Apis/DefaultApi.md#apiv1solvableordersget\"><strong>apiV1SolvableOrdersGet</strong></a></td>\n <td><strong>GET</strong> /api/v1/solvable_orders</td>\n <td>Get solvable orders.</td>\n </tr>\n <tr>\n <td><em>DefaultApi</em></td>\n <td><a href=\"Apis/DefaultApi.md#apiv1tokensselltokenfeeget\"><strong>apiV1TokensSellTokenFeeGet</strong></a></td>\n <td><strong>GET</strong> /api/v1/tokens/{sellToken}/fee</td>\n <td>The fee that is charged for placing an order. The fee is described by a minimum fee - in order to cover the gas costs for onchain settling - and a feeRatio charged to the users for using the service.</td>\n </tr>\n <tr>\n <td><em>DefaultApi</em></td>\n <td><a href=\"Apis/DefaultApi.md#apiv1tradesget\"><strong>apiV1TradesGet</strong></a></td>\n <td><strong>GET</strong> /api/v1/trades</td>\n <td>Get existing Trades.</td>\n </tr>\n </tbody>\n</table>\n\n<h3 id=\"documentation-for-models\">Documentation for Models</h3>\n\n<ul>\n <li><a href=\"/pages/backbonecabal/knowledgebase/api/Models/FeeInformation.html\">FeeInformation</a></li>\n <li><a href=\"/pages/backbonecabal/knowledgebase/api/Models/Order.html\">Order</a></li>\n <li><a href=\"/pages/backbonecabal/knowledgebase/api/Models/OrderCancellation.html\">OrderCancellation</a></li>\n <li><a href=\"/pages/backbonecabal/knowledgebase/api/Models/OrderCancellationError.html\">OrderCancellationError</a></li>\n <li><a href=\"/pages/backbonecabal/knowledgebase/api/Models/OrderCreation.html\">OrderCreation</a></li>\n <li><a href=\"/pages/backbonecabal/knowledgebase/api/Models/OrderMetaData.html\">OrderMetaData</a></li>\n <li><a href=\"/pages/backbonecabal/knowledgebase/api/Models/OrderPostError.html\">OrderPostError</a></li>\n <li><a href=\"/pages/backbonecabal/knowledgebase/api/Models/OrderType.html\">OrderType</a></li>\n <li><a href=\"/pages/backbonecabal/knowledgebase/api/Models/Trade.html\">Trade</a></li>\n</ul>\n\n<h3 id=\"documentation-for-authorization\">Documentation for Authorization</h3>\n\n<p>All endpoints do not require authorization.</p>\n\n<p>source: <code class=\"language-plaintext highlighter-rouge\">api/README.md</code></p>\n","dir":"/api/","name":"README.md","path":"api/README.md","url":"/api/"},{"sort":4,"layout":"default","title":"Proxy Gas Refunder","content":"<h1 id=\"proxy-gas-refunder\">Proxy Gas Refunder</h1>\n\n<p>A generic contract system for reliably refunding the gas costs of transactions. The purpose of the project is to:</p>\n\n<ul>\n <li>Enable Protocols to specify what contract calls they are willing to sponsor with a set of limitations (e.g gas price)</li>\n <li>Enable anyone to submit transactions that are eligible for refunding and get their transaction costs reimbursed.</li>\n</ul>\n\n<h2 id=\"contracts\">Contracts</h2>\n\n<p>There are 3 major contracts:</p>\n\n<ul>\n <li>Refunder factory</li>\n <li>Refunder</li>\n <li>GatewayProxy</li>\n</ul>\n\n<h3 id=\"refunder-factory\">Refunder Factory</h3>\n\n<p>Factory contract used for the deployment of <code class=\"language-plaintext highlighter-rouge\">Refunder</code> contracts. Anyone is able to deploy a refunder contract and configure it for its own needs.</p>\n\n<ul>\n <li><code class=\"language-plaintext highlighter-rouge\">RefunderFactory</code> is aware of the <code class=\"language-plaintext highlighter-rouge\">GateWayProxy</code> and its interface.</li>\n <li>On deployment:\n <ul>\n <li><code class=\"language-plaintext highlighter-rouge\">msg.sender</code> is the initial owner of the <code class=\"language-plaintext highlighter-rouge\">Refunder</code> contract.</li>\n <li>the deployed <code class=\"language-plaintext highlighter-rouge\">Refunder</code> contract is added to the set of registered <code class=\"language-plaintext highlighter-rouge\">refunders</code> in the <code class=\"language-plaintext highlighter-rouge\">GatewayProxy</code> via the <code class=\"language-plaintext highlighter-rouge\">GatewayProxy.addRefunder</code> function.</li>\n </ul>\n </li>\n</ul>\n\n<h3 id=\"refunder\">Refunder</h3>\n\n<p>Refunder contract is a standalone, completely independent contract that represents the interest of a given protocol/entity that wants to sponsor a set of function calls.\nThe contract:</p>\n\n<ul>\n <li>is <code class=\"language-plaintext highlighter-rouge\">ownable</code>. Initially set to the <code class=\"language-plaintext highlighter-rouge\">msg.sender</code> that calls the factory</li>\n <li>Holds <code class=\"language-plaintext highlighter-rouge\">ETH</code> for gas cost reimbursements</li>\n <li>has a <code class=\"language-plaintext highlighter-rouge\">map(address, bool)</code> of whitelisted <code class=\"language-plaintext highlighter-rouge\">GatewayProxy</code> contracts</li>\n <li>has a <code class=\"language-plaintext highlighter-rouge\">map(address -&gt; map(bytes4, uint256))</code> of whitelisted <code class=\"language-plaintext highlighter-rouge\">refundableCalls</code>. The key of the outer map is a “whitelisted” contract <code class=\"language-plaintext highlighter-rouge\">address</code>. Calls are represented by the function’s signature. The keys of the inner map (<code class=\"language-plaintext highlighter-rouge\">bytes4</code>) are calculated as <code class=\"language-plaintext highlighter-rouge\">keccak256('functionName(params)')</code>. For example, if a given refunder contract allows for refunding of ERC20 <code class=\"language-plaintext highlighter-rouge\">approve</code> tx, the key of the inner map would be <code class=\"language-plaintext highlighter-rouge\">bytes4(keccak256(approve(address,uint256))</code>. The value (<code class=\"language-plaintext highlighter-rouge\">uint256</code>) of the inner map (<code class=\"language-plaintext highlighter-rouge\">map(bytes4, uint256)</code>) represents the <code class=\"language-plaintext highlighter-rouge\">estimated</code> gas costs of refunding users for that specific contract call. NOTE: this is not the gas costs that will be reimbursed to the <code class=\"language-plaintext highlighter-rouge\">msg.sender</code>, but the <code class=\"language-plaintext highlighter-rouge\">expected</code> gas costs only for calling <code class=\"language-plaintext highlighter-rouge\">refund</code> with those arguments.</li>\n</ul>\n\n<h4 id=\"interface\">Interface</h4>\n\n<p>Note:\nFunction calls must be <code class=\"language-plaintext highlighter-rouge\">nonReentrant</code></p>\n\n<pre><code class=\"language-Solidity\">// @param isEligible - Returns true/false whether the specified contract call is eligible for gas refund\nfunction isEligible(address targetContract, bytes4 interfaceId, uint256 gasPrice) external returns (bool)\n\n// @param getRefundCost -  Returns the `expected` gas costs for executing the `refund` with the specified arguments\nfunction getRefundCost(address targetContract, bytes4 interfaceId, uint256 gasPrice) external returns (uint256)\n\n// @param refund - Refunds the sender, calling the target contract's function\nfunction refund(address sender, address target, bytes4 interfaceId, uint256 amount) external returns (bool)\n\n// @param  withdraw  - Withdraws ETH from the Refunder contract\nfunction withdraw(uint256 amount)\n</code></pre>  \n\n<h4 id=\"context\">Context</h4>\n\n<div class=\"language-solidity highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">abstract</span> <span class=\"k\">contract</span> <span class=\"n\">Context</span> <span class=\"p\">{</span>\n    <span class=\"k\">function</span> <span class=\"n\">_msgSender</span><span class=\"p\">()</span> <span class=\"k\">internal</span> <span class=\"k\">view</span> <span class=\"k\">virtual</span> <span class=\"k\">returns</span> <span class=\"p\">(</span><span class=\"kt\">address</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"k\">return</span> <span class=\"n\">msg</span><span class=\"p\">.</span><span class=\"n\">sender</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"k\">function</span> <span class=\"n\">_msgData</span><span class=\"p\">()</span> <span class=\"k\">internal</span> <span class=\"k\">view</span> <span class=\"k\">virtual</span> <span class=\"k\">returns</span> <span class=\"p\">(</span><span class=\"kt\">bytes</span> <span class=\"k\">calldata</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"nb\">this</span><span class=\"p\">;</span> <span class=\"c1\">// silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n</span>        <span class=\"k\">return</span> <span class=\"n\">msg</span><span class=\"p\">.</span><span class=\"n\">data</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre>  </div></div>\n\n<h3 id=\"gatewayproxy\">GatewayProxy</h3>\n\n<p>The GatewayProxy contract is a singleton contract used to forward the provided contract call data (e.g raw msg + signature) to the target contract and request a refund for the <code class=\"language-plaintext highlighter-rouge\">msg.sender</code> afterwards from the responsible <code class=\"language-plaintext highlighter-rouge\">Refunder</code> contract.</p>\n\n<blockquote>\n <p>Note v1 should implement the factory/registry pattern</p>\n</blockquote>\n\n<p>The contract has a <code class=\"language-plaintext highlighter-rouge\">map(address, bool)</code> of the deployed <code class=\"language-plaintext highlighter-rouge\">refunder</code> contracts. Anyone is able to add addresses to the <code class=\"language-plaintext highlighter-rouge\">map</code> if they support the required <code class=\"language-plaintext highlighter-rouge\">Refunder</code> interface.</p>\n\n<h4 id=\"interface-1\">Interface</h4>\n\n<blockquote>\n <p>Note v1 should implement the factory/registry pattern</p>\n</blockquote>\n\n<pre><code class=\"language-Solidity\">// Provides the `refunder` of the call, the target contract and the call data to be passed. Refunder reimburses the gas costs of the msg sender\nfunction supplyAndRefund(address refunder, address target, bytes data)\n\n\n// Adds new refunder in the `refunders` map. Internally this function calls the `refunder.refundGasCost` function to set the appropriate value in the `refunders` map\nfunction addRefunder(address refunder)\n\n</code></pre>  \n\n<h4 id=\"pseudo-code\">Pseudo-code</h4>\n\n<p><strong>Refund calculations</strong></p>\n\n<pre><code class=\"language-Solidity\">modifier netGasCost(targetContract, interfaceId) {\n    uint256 gasProvided = gasLeft();\n    uint256 refundCost = refunder.getRefundCost(targetContract, interfaceId, tx.gasprice) // FIXME - non-reentrance\n\n    _;\n\n    uint256 gasUsedSoFar = gasProvided - gasLeft();\n    refundAmount = (gasUsedSoFar + refundCost) * tx.gasprice;\n    refunder.refund(msg.sender, targetContract, interfaceId, refundAmount);\n}\n</code></pre>  \n\n<p><code class=\"language-plaintext highlighter-rouge\">getRefundCost</code> information is required in order for the <code class=\"language-plaintext highlighter-rouge\">GatewayProxy</code> to know how much will be the additional cost for the actual refund call</p>\n\n<p>NOTE: <code class=\"language-plaintext highlighter-rouge\">interfaceId</code> is the first 4 bytes of the provided <code class=\"language-plaintext highlighter-rouge\">bytes data</code></p>\n\n<p><strong>Supply and Refund</strong></p>\n\n<pre><code class=\"language-Solidity\">\n(bool success, bytes memory returnData) = target.call(data) // @dev forwarding value\n\n</code></pre>  \n","dir":"/","name":"refunder.md","path":"refunder.md","url":"/refunder.html"},{"sort":5,"layout":"default","title":"Directory","content":"<h1 id=\"directory\">Directory</h1>\n\n<p>If you want to list all <code class=\"language-plaintext highlighter-rouge\">pages</code> in the current directory, add following code to your markdown file!</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>{% include list.liquid %}\n</code></pre>  </div></div>\n\n<p>Then Generate a list like this:</p>\n\n<ul>\n <li><a href=\"/pages/backbonecabal/knowledgebase/proposal.html\">Sushiswap Proposal</a></li>\n <li><a href=\"/pages/backbonecabal/knowledgebase/benefits.html\">Benefits</a></li>\n <li><a href=\"/pages/backbonecabal/knowledgebase/refunder.html\">Proxy Gas Refunder</a></li>\n <li><a href=\"/pages/backbonecabal/knowledgebase/directory.html\">Directory</a></li>\n <li><a href=\"/pages/backbonecabal/knowledgebase/trade-settlement.html\">Trade and Settlement</a></li>\n <li><a href=\"/pages/backbonecabal/knowledgebase/suspensions.html\">Suspension and Disciplinary Proceedings</a></li>\n <li><a href=\"/pages/backbonecabal/knowledgebase/obligations.html\">Obligations</a></li>\n <li><a href=\"/pages/backbonecabal/knowledgebase/technical.html\">Technical Overview</a></li>\n <li><a href=\"/pages/backbonecabal/knowledgebase/limit_order_books.html\">Limit Order Books</a></li>\n <li><a href=\"/pages/backbonecabal/knowledgebase/roadmap.html\">Roadmap</a></li>\n <li><a href=\"/pages/backbonecabal/knowledgebase/web3modal.html\">Backbone Cabal rpc connect protocol (Web3 RPC Network)</a></li>\n</ul>\n\n<p>If you want to list all <code class=\"language-plaintext highlighter-rouge\">pages and sub directory</code> in the current directory, add following code to your markdown file!</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>{% include list.liquid all=true %}\n</code></pre>  </div></div>\n\n<p>Then Generate a list like this <a href=\"/pages/backbonecabal/knowledgebase/docs/\">table of contents</a>!</p>\n","dir":"/","name":"directory.md","path":"directory.md","url":"/directory.html"},{"sort":6,"layout":"default","title":"Trade and Settlement","content":"<h1 id=\"trade-and-settlement\">Trade and Settlement</h1>\n\n<h2 id=\"401-submission-of-trades\">401. Submission of Trades</h2>\n\n<p>(A). Upon matching of a trade effected on or pursuant to the rules of the\nExchange, the Exchange shall promptly submit to Commodity Stream, LLC a trade\nreport generated by the electronic trading system of the Exchange. The report\nshall show for each trade</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>(i) the identity of each Clearing Participant and/or Network Participant,\n(ii) whether bought or sold,\n(iii) quantity,\n(iv) delivery month,\n(v) the price,\n(vi) whether for house, Customer, or non- Customer account, and\n(vii) such other information as may be required by Commodity Stream, LLC.\n</code></pre>  </div></div>\n\n<p>(B). If Commodity Stream, LLC determines that any trade report submitted\npursuant to this Rule 401 contains a material error or is otherwise not eligible\nfor clearing by Commodity Stream, LLC, Commodity Stream, LLC may reject such\ntrade and notify the Exchange of such rejection, setting forth the basis of such\nobjection.</p>\n\n<h2 id=\"402-clearance-and-substitution\">402. Clearance and Substitution</h2>\n\n<p>(a) The submission of a Contract (Smart Contract or a Normal Contract) to\nCommodity Stream, LLC by or on behalf of the buying and selling Clearing\nParticipants shall constitute a request, by such Clearing Participants, for the\nclearing of such Contract by Commodity Stream, LLC. Upon the acceptance thereof\nby Commodity Stream, LLC, which ordinarily shall be deemed to occur upon the\nreceipt of matched trade data from the Exchange, the Contract shall be novated\nand Commodity Stream, LLC shall be substituted as, and assume the position of,\nseller to the Clearing Participant buying such Contract and buyer from the\nClearing Participant selling such Contract. Upon such substitution, such buying\nand selling Clearing Participants shall be released from their obligations to\neach other, and Commodity Stream, LLC shall be deemed to have succeeded to all\nthe rights, and to have assumed all the Obligations, of the Clearing\nParticipants that were party to such Contract, in each case as provided in the\nRules.</p>\n\n<p>(b) Where an Commodity Stream, LLC Clearing Participant and/or Network\nParticipant acts to clear a Contract made for the account of a Customer, the\nCommodity Stream, LLC Clearing Participant becomes obligated to Commodity\nStream, LLC, and Commodity Stream, LLC becomes obligated to the Commodity\nStream, LLC Clearing Participant, with respect to such Contract in the same\nmanner and to the same extent as if the Contract were for the account of the\nCommodity Stream, LLC Clearing Participant.</p>\n\n<p>(c) Notwithstanding the provisions of paragraph (a), a trade shall not be\naccepted for clearing, and Commodity Stream, LLC shall not be substituted for a\ngiven Contract, unless the Margin for such Contract is made available to\nCommodity Stream, LLC, by or for both Clearing Participants, pursuant to\nRule 403.</p>\n\n<h2 id=\"403-margin\">403. Margin</h2>\n\n<p>(a) Each Network and Clearing Participant SHALL deposit funds or Collateral in\nthe form of the applicable quantity of the deliverable underlying commodity\nand/or deliverable asset required to fully collateralize orders pursuant to the\ncontract specifications contained in the Rulebook, including payment of\npremiums, payment in exchange for delivery or to fulfill delivery obligations,\nas applicable, prior to submission of such orders to the Exchange. Fund and\nCollateral transfers made by a Clearing Participant to the Clearinghouse or by\nthe Clearinghouse to a Clearing Participant are irrevocable and unconditional\nwhen effected. The Clearing Participant shall be responsible for all fees\nassociated with wires or transfers of Collateral to the Clearinghouse.</p>\n\n<p>(b) Subject to the terms and conditions of the Clearinghouse, Clearing\nParticipants may deposit the following as Margin:</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>(1) cash;\n\n(2) the underlying commodity; and\n\n(3) any other form of Collateral deemed acceptable by the Risk Management Committee upon the Risk Management Committee’s approval of such Collateral as communicated through Clearinghouse notices. The Clearinghouse will value margin Collateral as it deems appropriate.\n</code></pre>  </div></div>\n\n<p>(c) Funds and Collateral must be and remain unencumbered. Except as otherwise\nprovided herein, each Clearing Participant posting funds or Collateral hereby\ngrants to the Clearinghouse a first priority security interest in and\nunencumbered lien against any Margin, Contracts, positions and other funds,\nproperty and any other Collateral deposited with the Clearinghouse by the\nClearing Participant, including without limitation such Clearing Participant’s\nMember Property Accounts, the Customer Accounts of such Clearing Participant’s\nCustomers, and all securities entitlements held therein. A Clearing Participant\nshall execute any documents required by Commodity Stream, LLC to create, perfect\nand enforce such lien. Each Clearing Participant hereby agrees that with respect\nto any funds or Collateral which is or may be credited to the Clearing\nParticipant’s Member Property Account or Customer Account, as applicable, the\nClearinghouse shall have control pursuant to Section 9-106(a) and 8-106(e) of\nthe UCC and a perfected security interest pursuant to Section 9-314(a) of the\nUCC.</p>\n\n<p>(d) Commodity Stream, LLC may assign, pledge, repledge or otherwise create a\nlien on or security interest in, and enter into repurchase agreements involving,\nMargin, Contracts, positions and other funds, property and any other Collateral\ndeposited with the Clearinghouse by the Clearing Participant, as permitted by\nCFTC Regulations, held in or for such Clearing Participant’s Member Property\nAccounts or the Customer Accounts of such Clearing Participant’s Customers to\nsecure the repayment of funds that may be borrowed by Commodity Stream, LLC.</p>\n\n<p>(e) Clearing Participant must transfer the funds and Collateral to the\nClearinghouse which will hold funds and Collateral on behalf of the Clearing\nParticipant. Commodity Stream, LLC will credit to the Clearing Participant the\nfunds and Collateral that such Clearing Participant deposits. Funds and\nCollateral shall be held by the Clearinghouse until a Clearing Participant\nsubmits a withdrawal notification, unless otherwise stipulated by these Rules.\nCommodity Stream, LLC will not be responsible for any diminution in value of\nfunds or Collateral that a Clearing Participant deposits with the Clearinghouse,\nexcept, in the case of cash, the diminution of value is as a direct result of\ninvestment activity of the Clearinghouse, such activity having been conducted in\nfull compliance with CFTC Regulations. Any fluctuation in markets is the risk of\neach Clearing Participant. Any interest earned on Clearing Participant funds or\nCollateral may be retained by the Clearinghouse.</p>\n\n<p>(f) If a Clearing Participant is in Default, Commodity Stream, LLC may foreclose\non and sell any of the Margin deposited by such Clearing Participant without\nnotice.</p>\n\n<p>(g) Commodity Stream, LLC shall be empowered to invest and reinvest all or part\nof the funds constituting Margin. Such investments shall be for the account and\nrisk of Commodity Stream, LLC, and any income and gains on such investments and\ninterest on such deposits shall belong to Commodity Stream, LLC and may be\nwithdrawn from the account holding the Margin and deposited with the general\nfunds of Commodity Stream, LLC.</p>\n\n<h2 id=\"404-offset-and-settlement\">404. Offset and Settlement</h2>\n\n<p>(a) Where, as the result of novation under Rule 402, a Clearing Participant has\nbought and sold a Contract on or subject to the Rules of the Exchange with the\nsame expiration, or otherwise deemed equivalent by the Clearinghouse, the\npurchase and sale will be offset by Commodity Stream, LLC through the timely\nsubmission of instructions by the Clearing Participant containing such\ninformation as Commodity Stream, LLC may require in accordance with its\nprocedures. A Clearing Participant shall be required to pay the loss or entitled\nto collect the profit, as the case may be, upon such offsetting transactions,\nand shall have no further rights or be under any further obligation with respect\nthereto. For purposes of this Rule 404, the first Contracts made shall be deemed\nthe first Contracts offset.</p>\n\n<p>(b) Contracts made and designated by the Network or Clearing Participant as for\nthe Network and/or Clearing Participant’s Customer Account shall not be offset\nunder this Rule 405 against Contracts designated by the Clearing Participant as\nfor the Clearing Participant’s own Member Property Account.</p>\n\n<h2 id=\"405-approved-depository-institutions\">405. Approved Depository Institutions</h2>\n\n<p>A bank, trust company or other depository that meets such financial and other\nrequirements of Commodity Stream, LLC may be designated by Commodity Stream, LLC\nas an Approved Depository Institution.</p>\n\n<h2 id=\"406-statement-of-trades-and-contracts\">406. Statement of Trades and Contracts</h2>\n\n<p>Commodity Stream, LLC shall in the manner and at the time that it determines\nfrom time to time make available to a Clearing Participant an accounting of\ntrades and Contracts for each Business Day on which such Clearing Participant\nhas trades to be cleared or Contracts open with Commodity Stream, LLC. Any\namounts the Clearing Participant has posted to Commodity Stream, LLC under Rule\n403 shall be indicated on this statement</p>\n\n<h2 id=\"409-settlement-prices\">409. Settlement Prices</h2>\n\n<p>As used in the Rules, the term “Settlement Price” means the settlement price for\na Contract for which positions remain open, as determined, intra-day and at the\nclose of regular trading hours, by the Exchange in accordance with its rules,\nexcept in the case of manifest error or where Commodity Stream, LLC believes\nthat such settlement price does not reasonably reflect the value or price of the\nContract, in which case Commodity Stream, LLC, using its best efforts to consult\nwith the Exchange, shall determine the official Settlement Price; provided, that\nCommodity Stream, LLC shall in such circumstances promptly notify the Exchange\nand Clearing Participants, and the reasons for that determination and the basis\nfor the Settlement Price determined by Commodity Stream, LLC shall be published\nin a notice to the Exchange and Clearing Participants.</p>\n\n<h2 id=\"410-delivery\">410. Delivery</h2>\n\n<p>After trading ceases for a Smart Contract and/or Normal Contract that is\nphysically settled, the Clearinghouse shall transfer the underlying to the\nAccount of the Clearing Participant that is required to accept delivery, from\nthe Account of the Clearing Participant obligated to make delivery, such full\ncollateralization having been transferred to the Clearinghouse’s custody at the\ninception of the trade. Deliveries will occur on the Clearinghouse’s books and\nrecords unless otherwise specified in the Exchange contract specifications.</p>\n\n<h2 id=\"411-reporting\">411. Reporting</h2>\n\n<p>Network and Clearing Participants shall make such reports in respect of trades,\nSmart Contracts, Normal Contracts settlements and deliveries as may be as\nprescribed by Commodity Stream, LLC.</p>\n\n<p>copyright (c) 2021 Commodity Stream, LLC - All Rights Reserved CC-BY-NC-ND-2.5</p>\n","dir":"/","name":"trade-settlement.md","path":"trade-settlement.md","url":"/trade-settlement.html"},{"sort":7,"layout":"default","title":"Suspension and Disciplinary Proceedings","content":"<h1 id=\"suspension-and-disciplinary-proceedings\">Suspension and Disciplinary Proceedings</h1>\n\n<h2 id=\"overview\">Overview</h2>\n\n<p>(A). The Board, Risk Management Committee, or any Exchange Committee may\nsummarily suspend any Clearing Participant</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>(i) if the Clearing Participant is in Default,\n(ii) upon the discovery of a materially false or misleading representation or warranty made by the Clearing Participant to Commodity Stream, LLC under or in connection with any agreement between Commodity Stream, LLC and the Clearing Participant,\n(iii) if a breach by the Clearing Participant of the Rules or any of the terms or provisions of any agreement between Commodity Stream, LLC and the Clearing Participant is not remedied promptly after notice from Commodity Stream, LLC,\n(iv) in the event of a material violation of the Rules of the Exchange or of the  Clearinghouse, or\n(v) if the Board or the Risk Management Committee determines that suspension is necessary for the protection of Commodity Stream, LLC, other Clearing Participants, or the general public (whether or not such Clearing Participant continues to meet the required minimum financial requirements pursuant to the Rules).\n</code></pre>  </div></div>\n\n<h3 id=\"notice-of-suspension-to-participants\">Notice of Suspension to Participants</h3>\n\n<p>(B). <strong>Notice of Suspension to Network and Clearing Participants</strong> Upon the\nsuspension of a Clearing Participant, Commodity Stream, LLC shall as soon as\npossible notify all Clearing Participants of the suspension. Such notice shall\nstate to the extent practicable in general terms how pending transactions, open\npositions and other pending matters will be affected and what steps are to be\ntaken in connection therewith.</p>\n\n<h3 id=\"pending-transactions\">Pending Transactions</h3>\n\n<p>(C). <strong>Pending Transactions</strong> Notwithstanding any other provision of the Rules,\nCommodity Stream, LLC shall have no obligation to accept any transaction of a\nsuspended Network and/or Clearing Participant that was effected after the time\nat which the Clearing Participant was suspended. In the event a transaction of a\nsuspended Clearing Participant is rejected by Commodity Stream, LLC, Commodity\nStream, LLC shall provide notice of such rejection to the other party thereto\nand such transaction shall be closed by the other party thereto in accordance\nwith the rules of the Exchange.</p>\n\n<h3 id=\"open-positions\">Open Positions</h3>\n\n<p>(D). <strong>Open Positions</strong>* Commodity Stream, LLC shall have the right to cause\nopen positions in Contracts in any of the accounts of a suspended Clearing\nParticipant:</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>  (i) To be closed in such manner as deemed practicable by Commodity Stream, LLC, in its sole discretion;\n    (ii) To be transferred to the account of one or more other Clearing Participants;\n    (iii) To be offset against each other and, to the extent of any remaining imbalance, against the Contracts of other Clearing Participants; or\n\n    (iv) To be settled at the Settlement Price for such Contracts, or at such other price or prices as Commodity Stream, LLC\n    may deem fair and reasonable under the circumstances, in which event Commodity Stream, LLC may cause Contracts in the accounts\n    of other Clearing Participants to be settled at such price or prices;\n\n    (v) Or take any other action with respect to open positions it deems in the best interest of the Clearinghouse or the Clearing Participants.\n</code></pre>  </div></div>\n\n<p>In connection with any action undertaken by Commodity Stream, LLC pursuant to\nsubparagraphs (i) through (iv) above, Commodity Stream, LLC shall have the right\nto apply the Margin of the applicable Clearing Participant and any other assets\nof such Clearing Participant held by, pledged to or otherwise available to\nCommodity Stream, LLC, including any guarantee issued pursuant to these Rules,\nto discharge the Obligations of such Clearing Participant to Commodity Stream,\nLLC Clearing (including any costs and expenses associated with the liquidation,\ntransfer or management of Contracts held in or for the accounts of such Network\nand/or Clearing Participant, and any fees, assessments or fines imposed by\nCommodity Stream, LLC on such Clearing Participant).</p>\n\n<p>Commodity Stream, LLC may delegate to specified Officers or agents of Commodity\nStream, LLC the authority to determine, within such guidelines, if any, as\nCommodity Stream, LLC shall prescribe, the nature and timing of transactions of\nthe type described in subparagraph (i). Notwithstanding the preceding provisions\nof this paragraph (d), if Commodity Stream, LLC shall determine, taking into\naccount the size and nature of a suspended Clearing Participant’s positions,\nmarket conditions prevailing at the time, the potential market effects of\nliquidating transactions that might be directed by Commodity Stream, LLC, and\nsuch other circumstances as Commodity Stream, LLC deems relevant, that the\nclosing out of some or all of the suspended Network and/or Clearing\nParticipant’s positions would not be in the best interests of Commodity Stream,\nLLC, other Clearing Participants, or the general public, such positions need not\nbe closed out.</p>\n\n<h3 id=\"protective-action\">Protective Action</h3>\n\n<p>(E). <strong>Protective Action</strong> If Commodity Stream, LLC (i) is unable, for any\nreason, to close out in a prompt and orderly manner any positions or to convert\nto cash any Margin deposits of a suspended Network and/or Clearing Participant,\nor (ii) elects pursuant to paragraph (d) of this Rule not to close out any such\npositions, Commodity Stream, LLC may authorize the execution of hedging\ntransactions from time to time for the account of Commodity Stream, LLC, solely\nfor the purpose of reducing the risk to Commodity Stream, LLC resulting from the\ncontinued maintenance of such positions or the continued holding of such Margin\ndeposits. Commodity Stream, LLC may delegate to specified Officers or agents of\nCommodity Stream, LLC the authority to determine, within such guidelines, if\nany, as Commodity Stream, LLC shall prescribe, the nature and timing of such\nhedging transactions.</p>\n\n<h3 id=\"reimbursement-of-costs-and-expenses\">Reimbursement of Costs and Expenses</h3>\n\n<p>(F). Reimbursement of Costs and Expenses Any costs or expenses, including\nlosses, sustained by Commodity Stream, LLC in connection with transactions\neffected for its account pursuant to this Rule shall be charged to the suspended\nClearing Participant, and any gains realized on such transactions shall be\ncredited to such Clearing Participant; provided, however, that costs, expenses,\nand gains allocable to the hedging of positions in a Customer Account shall be\ncharged or credited, as the case may be, to the Customer Account, and only the\nexcess, if any, of such costs and expenses over the funds available in that\naccount shall be charged to the Clearing Participant. Reasonable allocations of\ncosts, expenses, and gains among accounts made by Commodity Stream, LLC for the\npurpose of implementing the proviso to the preceding sentence shall be binding\non the Clearing Participant and any persons claiming through the Clearing\nParticipant and their respective successors and assigns.</p>\n\n<h2 id=\"602-right-of-appeal\">602. Right of Appeal</h2>\n\n<p>A Clearing Participant suspended pursuant to Rule 601 shall be entitled, upon\nrequest within five Business Days after the date of its suspension, to a written\nstatement of the grounds for its suspension and shall have the right to appeal\nits suspension in accordance with the following procedure:</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>(A). A suspended Clearing Participant may appeal its suspension by filing a written notice of\n</code></pre>  </div></div>\n\n<p>appeal within five Business Days after the date of its receipt of a written statement of the\ngrounds for its suspension.</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>(B). Appeals shall be considered and decided by the Appeal Panel. Appeals shall be heard as\n</code></pre>  </div></div>\n\n<p>promptly as possible, and in no event more than five Business Days after the filing of the notice\nof appeal. The appellant shall be notified of the time, place and date of the hearing not less than\nthree Business Days in advance of such date. At the hearing, the appellant shall be afforded an\nopportunity to be heard and to present evidence in its own behalf, and may, if it so desires, be\nrepresented by counsel. As promptly as possible after the hearing, the Appeal Panel shall, by the\nvote of a majority of its members, affirm or reverse the suspension or modify the terms thereof.\nThe appellant shall be notified in writing of the Appeal Panel’s decision; and if the decision\nshall have been to affirm or modify the suspension, the appellant shall be given a written\nstatement of the grounds therefor.</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>(C). Any decision by the Appeal Panel to affirm or modify a suspension shall be reviewable by\n</code></pre>  </div></div>\n\n<p>the Board on its own motion or on written demand by the appellant filed with Commodity Stream, LLC\nwithin three Business Days after receipt of notice of the Appeal Panel’s decision. The Board may\nafford the appellant a further opportunity to be heard or to present evidence. The appellant shall\nbe notified in writing of the decision of the Board; and if the decision shall have been to affirm\nor modify the suspension, the appellant shall be given a written statement of the grounds therefor.</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>(D). The filing of an appeal pursuant to this Rule shall not impair the validity or stay the\n</code></pre>  </div></div>\n\n<p>effect of the suspension appealed from. The reversal or modification of a suspension shall not\ninvalidate any acts of Commodity Stream, LLC taken pursuant to such suspension prior to such\nreversal or modification, and the rights of any person which may arise out of any such acts shall\nnot be affected by such reversal or modification.</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>(E). A record shall be kept of any hearing held pursuant hereto. The cost of the transcript\n</code></pre>  </div></div>\n\n<p>may, in the discretion of the body holding the hearing, be charged in whole or in part to the\nsuspended Clearing Participant in the event that the suspension is finally affirmed.</p>\n\n<h2 id=\"603-sanctions-from-disciplinary-proceedings\">603. Sanctions from Disciplinary Proceedings</h2>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>(A). Commodity Stream, LLC may censure, suspend, expel or limit the activities, functions or\n</code></pre>  </div></div>\n\n<p>operations of, and/or impose a fine on (each a “sanction”), a Clearing Participant for (i) a\nviolation of the Rules or its agreements with Commodity Stream, LLC or the Exchange, (ii) any\nneglect or refusal by such Clearing Participant to comply with any applicable order or direction of\nCommodity Stream, LLC or the Exchange, (iii) any error, delay or other conduct that materially and\nadversely affects the operations of Commodity Stream, LLC or Commodity Stream, LLC Exchange, (iv) a\nviolation of the rules of the Exchange, or (v) a failure to provide adequate personnel or\nfacilities, where applicable, for its transactions with Commodity Stream, LLC.</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>(B). Commodity Stream, LLC shall provide prompt notice to the CFTC/and or any other governance Board\n of any action taken in accordance with this Rule 603.\n</code></pre>  </div></div>\n\n<h2 id=\"604-procedures-for-disciplinary-proceedings\">604. Procedures for Disciplinary Proceedings</h2>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>(A). Before any sanction is imposed pursuant to Rule 603, Commodity Stream, LLC shall furnish\n</code></pre>  </div></div>\n\n<p>the person against whom the sanction is sought to be imposed (“Respondent”) with a concise written\nstatement of the charges against the Respondent. The Respondent shall have ten Business Days after\nthe service of such statement to file with Commodity Stream, LLC a written answer thereto. The\nanswer shall admit or deny each allegation contained in the statement of charges and may also\ncontain any defense which the Respondent wishes to submit. Allegations contained in the statement\nof charges which are not denied in the answer shall be deemed to have been admitted, and any\ndefense not raised in the answer shall be deemed to have been waived. If an answer is not filed\nwithin the time prescribed above or any extension thereof granted pursuant to paragraph (d) of this\nRule, the allegations contained in the statement of charges shall be deemed to have been admitted,\nand the sanction specified in the final request shall be imposed without further proceedings and\nthe Respondent shall be notified thereof in writing. If an answer is timely filed, Commodity\nStream, LLC shall (unless the Respondent and Commodity Stream, LLC shall have stipulated to the\nimposition of an agreed sanction) schedule a hearing before the Disciplinary Panel. The Respondent\nshall be given not less than three Business Days advance notice of the place and time of such\nhearing. At the hearing, the Respondent shall be afforded the opportunity to be heard and to\npresent evidence in its behalf and may be represented by counsel. A record of the hearing shall be\nprepared and the cost of the transcript may, in the discretion of the Disciplinary Panel, be\ncharged in whole or in part to the Respondent in the event any sanction is imposed on the\nRespondent. As soon as practicable after the conclusion of the hearing, the Disciplinary Panel\nshall furnish the Respondent and the Board with a written statement of its decision. If the\ndecision shall have been to impose a disciplinary sanction, the written statement shall set forth</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>    (i) any act or practice in which the Respondent has been found to have engaged, or which\n</code></pre>  </div></div>\n\n<p>the Respondent has been found to have omitted;</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>    (ii) the specific provisions of the Rules which any such act, practice or omission has been\n</code></pre>  </div></div>\n\n<p>deemed to violate; and</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>    (iii) the sanction imposed and the reasons therefor.\n\n(B). In the event that (i) the Disciplinary Panel censures, fines, suspends, expels or limits\n</code></pre>  </div></div>\n\n<p>the activities, functions or operations of a Respondent, or (ii) determines not to impose any\ndisciplinary measures on a Respondent, the Respondent, in the case of (i) above, or the President,\nin the case of (ii) above, may apply for review to the Board, by written motion filed with\nCommodity Stream, LLC within five Business Days after issuance of the Disciplinary Panel’s written\nstatement of its decision.</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>(C). The granting of any such motion shall be within the discretion of the Board. In addition,\n</code></pre>  </div></div>\n\n<p>the Board may determine to review any such action by the Disciplinary Panel on its own motion.\nReview by the Board shall be on the basis of the written record of the proceedings in which the\nsanction was imposed, but the Board may, in its discretion, afford the Respondent a further\nopportunity to be heard or to present evidence. A record shall be kept of any such further\nproceedings. Based upon such review, the Board may affirm, reverse or modify, in whole or in part,\nthe decision of the Disciplinary Panel. The Respondent shall be notified in writing of the decision\nof the Board and if the decision shall have been to affirm or modify the imposition of any\ndisciplinary sanction, the Respondent shall be given a written statement setting forth</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>    (i) any act or practice in which the Respondent has been found to have engaged, or which\n     the Respondent has been found to have omitted;\n\n    (ii) the Rules which any such act, practice or omission has been deemed to violate; and\n\n    (iii) the sanction imposed and the reasons therefor.\n\n(D). Any time limit set forth in this Rule may be extended by the body having jurisdiction over\n</code></pre>  </div></div>\n\n<p>the matter in respect of which the time limit is imposed.</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>(E). Any action taken by the Disciplinary Panel hereunder shall be deemed to be final upon (i)\n</code></pre>  </div></div>\n\n<p>expiration of the time provided for the filing of a motion for review, or any extension thereof\ngranted pursuant to paragraph (d) hereof; or (ii) if a motion for review is timely filed, when the\nRespondent is notified of the denial of the motion or the decision of the Board on review, as the\ncase may be; or (iii) if the Board shall determine on its own motion to review the action by the\nDisciplinary Panel, when the Respondent is notified of the decision of the Board on review.</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>(F). The summary suspension of a Clearing Participant pursuant to Rule 601 shall not be deemed\n</code></pre>  </div></div>\n\n<p>to be a “sanction” within the meaning of this Rule, and the provisions of this Rule shall be\ninapplicable to any such summary suspension.</p>\n\n<h2 id=\"605-discipline-by-other-self-regulatory-organizations\">605. Discipline by Other Self-Regulatory Organizations</h2>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>(A). At the discretion of the Clearinghouse, any suspected violation of these Rules may be\n</code></pre>  </div></div>\n\n<p>referred to the enforcement staff of the Exchange.</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>(B). Any inquiry, investigation or disciplinary action resulting from a suspected violation of\n</code></pre>  </div></div>\n\n<p>these Rules may be handled by Clearinghouse personnel, Exchange personnel, or personnel that serve\nin roles at both the Clearinghouse and the Exchange.</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>(C). Nothing in this Chapter 6 shall affect the right of any Self-Regulatory Organization to\n</code></pre>  </div></div>\n\n<p>discipline its members pursuant to the provisions of its rules for a violation of the Rules of\nCommodity Stream, LLC. ## 606. Restriction on or Termination of Clearing Privileges.</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>(A). If [x] a Removal Event occurs with respect to a Clearing Participant, or [y]Commodity\n</code></pre>  </div></div>\n\n<p>Stream, LLC determines that the financial or operational condition of a Clearing Participant or one\nof its affiliates is such that to allow the Clearing Participant to continue its operation as a\nClearing Participant could adversely affect Commodity Stream, LLC or cleared markets (whether or\nnot such Clearing Participant continues to meet the required minimum financial requirements, if\napplicable), Commodity Stream, LLC may:</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>    (i) Allow such Clearing Participant (in the case of an Commodity Stream, LLC Clearing\n</code></pre>  </div></div>\n\n<p>Participant handling Customer Accounts) to submit Contracts for clearing solely for its Member\nProperty Account;</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>    (ii) Limit or restrict the type of Contracts that may be cleared by such Clearing\n</code></pre>  </div></div>\n\n<p>Participant in any of its Accounts with Commodity Stream, LLC;</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>    (iii) Limit or restrict the number of Contracts that are permitted to be maintained by such\n</code></pre>  </div></div>\n\n<p>Clearing Participant in any of its Accounts with Commodity Stream, LLC;</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>    (iv) Decline to accept new trades or positions in Contracts for the Accounts of the\n</code></pre>  </div></div>\n\n<p>Clearing Participant;</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>    (v) Increase such Clearing Participant’s Margin requirements and/or require such Clearing\n</code></pre>  </div></div>\n\n<p>Participant to deposit the same in cash or Eligible Securities in proportions different than those\nthat are applicable to Clearing Participants generally;</p>\n","dir":"/","name":"suspensions.md","path":"suspensions.md","url":"/suspensions.html"},{"sort":8,"layout":"default","title":"Obligations","content":"<h1 id=\"obligations\">Obligations</h1>\n\n<h2 id=\"501-limitation-of-liability\">501. Limitation of Liability</h2>\n\n<p>(A). THE LIABILITY OF Commodity Stream, LLC CLEARING RELATING TO OR ARISING OUT\nOF CONTRACTS SHALL BE LIMITED TO LOSSES RESULTING FROM THE NOVATION OF THE\nCONTRACTS IN ACCORDANCE WITH THE RULES. SUBJECT TO THE FOREGOING, NEITHER THE\nCLEARINGHOUSE, NOR ANY AFFILIATE OF THE CLEARINGHOUSE, NOR ANY OF THEIR\nRESPECTIVE MANAGERS, OFFICERS, DIRECTORS, EMPLOYEES, EQUITYHOLDERS, AGENTS,\nCONSULTANTS OR SERVICE PROVIDERS (INCLUDING, WITHOUT LIMITATION, ANY REGULATORY\nSERVICES PROVIDER), NOR ANY MEMBER OF ANY COMMITTEE OR OTHER GOVERNING BODY OF\nANY AFFILIATE OF THE CLEARINGHOUSE (EACH OF THE FOREGOING, AS APPLICABLE, THE\n“DISCLAIMING PARTY” AND, COLLECTIVELY, “DISCLAIMING PARTIES”) SHALL BE\nRESPONSIBLE FOR ANY ACTION TAKEN, OR ANY DELAY OR FAILURE TO TAKE ANY ACTION,\nHEREUNDER OR OTHERWISE TO FULFILL A DISCLAIMING PARTY’S OBLIGATIONS TO CLEARING\nPARTICIPANTS, OTHER THAN FOR LOSSES CAUSED DIRECTLY BY A DISCLAIMING PARTY’S\nGROSS NEGLIGENCE OR WILLFUL MISCONDUCT AND SHALL NOT BE LIABLE FOR ANY OTHER\nOBLIGATIONS, INCLUDING BUT NOT LIMITED TO OBLIGATIONS OF A CLEARING PARTICIPANT,\nOBLIGATIONS OF A CLEARING PARTICIPANT TO A CUSTOMER OR OTHER NON-CLEARING\nPARTICIPANT OR OBLIGATIONS OF A CLEARING PARTICIPANT TO ANOTHER CLEARING\nPARTICIPANT THAT IS ACTING FOR IT AS BROKER; NOR SHALL A DISCLAIMING PARTY\nBECOME LIABLE TO MAKE DELIVERIES TO OR ACCEPT DELIVERIES FROM CLEARING\nPARTICIPANTS OR CUSTOMERS. UNDER NO CIRCUMSTANCES WILL A DISCLAIMING PARTY BE\nLIABLE FOR (1) THE ACTS, DELAYS, OMISSIONS, BANKRUPTCY, OR INSOLVENCY, OF ANY\nTHIRD PARTY, INCLUDING, WITHOUT LIMITATION, ANY DEPOSITORY, CUSTODIAN,\nSUBCUSTODIAN, CLEARING OR SETTLEMENT SYSTEM UNLESS THE DISCLAIMING PARTY WAS\nGROSSLY NEGLIGENT OR ENGAGED IN WILLFUL MISCONDUCT OR (2) THE PERFORMANCE OR\nOPERATION (OR NON- PERFORMANCE OR NON-OPERATION) OF ANY DIGITAL ASSET OR RELATED\nDISTRIBUTED LEDGER (“ANCILLARY DL”) ATTRIBUTABLE DIRECTLY OR INDIRECTLY TO THE\nDESIGN OF THE DIGITAL ASSET OR ANCILLARY DL. UNDER NO CIRCUMSTANCES WILL A\nDISCLAIMING PARTY BE LIABLE FOR ANY INDIRECT, CONSEQUENTIAL, INCIDENTAL,\nSPECIAL, PUNITIVE OR EXEMPLARY LOSS OR DAMAGE (INCLUDING, BUT NOT LIMITED TO,\nLOSS OF BUSINESS, LOSS OF PROFITS, TRADING LOSSES, LOSS OF OPPORTUNITY AND LOSS\nOF USE) HOWSOEVER SUFFERED OR INCURRED, REGARDLESS OF WHETHER THE DISCLAIMING\nPARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES OR WHETHER SUCH\nDAMAGES OTHERWISE COULD HAVE BEEN FORESEEN OR PREVENTED. THE FOREGOING\nLIMITATIONS OF LIABILITY SHALL APPLY REGARDLESS OF WHETHER A CLAIM IS BASED ON\nBREACH OF CONTRACT, TORT, INCLUDING, WITHOUT LIMITATION, NEGLIGENCE (OTHER THAN\nGROSS NEGLIGENCE), STRICT LIABILITY, NEGLIGENT MISREPRESENTATION, RESTITUTION,\nBREACH OF STATUTORY DUTY, BREACH OF WARRANTY OR OTHERWISE, AND WHETHER THE CLAIM\nIS BROUGHT DIRECTLY OR AS A THIRD-PARTY CLAIM.</p>\n\n<p>(B). THERE ARE NO EXPRESS OR IMPLIED WARRANTIES OR REPRESENTATIONS PROVIDED BY\nTHE CLEARINGHOUSE OR ANY OTHER DISCLAIMING PARTY RELATING TO ANY SYSTEMS OR\nSERVICES OF THE CLEARINGHOUSE OR SERVICES, EQUIPMENT OR FACILITIES USED TO\nSUPPORT SUCH SYSTEMS OR SERVICES, AND THE CLEARINGHOUSE HEREBY SPECIFICALLY\nDISCLAIMS, OVERRIDES AND EXCLUDES, TO THE FULLEST EXTENT PERMITTED BY LAW, ALL\nIMPLIED WARRANTIES OF MERCHANTABILITY, SATISFACTORY QUALITY, FITNESS FOR A\nPARTICULAR PURPOSE AND ALL OTHER WARRANTIES, CONDITIONS, OTHER CONTRACTUAL\nTERMS, REPRESENTATIONS, INDEMNITIES AND GUARANTEES WITH RESPECT TO THE SERVICES,\nWHETHER EXPRESS, IMPLIED OR STATUTORY, ARISING BY LAW, CUSTOM, PRIOR ORAL OR\nWRITTEN STATEMENTS BY THE CLEARINGHOUSE OR ANY OTHER DISCLAIMING PARTY OR\nOTHERWISE (INCLUDING BUT NOT LIMITED TO, AS TO TITLE, SATISFACTORY QUALITY,\nACCURACY, COMPLETENESS, UNINTERRUPTED USE, NON-INFRINGEMENT, TIMELINESS,\nTRUTHFULNESS, SEQUENCE AND ANY IMPLIED WARRANTIES, CONDITIONS AND OTHER\nCONTRACTUAL TERMS ARISING FROM TRANSACTION USAGE, COURSE OF DEALING OR COURSE OF\nPERFORMANCE) RELATING TO ANY SYSTEMS OR SERVICES OF THE CLEARINGHOUSE OR\nSERVICES, EQUIPMENT OR FACILITIES USED TO SUPPORT SUCH SYSTEMS OR SERVICES.</p>\n\n<p>(C). Commodity Stream, LLC CLEARING MAY ACCEPT AND RELY UPON ANY INFORMATION OR\nINSTRUCTION GIVEN TO Commodity Stream, LLC CLEARING BY A CLEARING PARTICIPANT OR\nITS OFFICERS OR AUTHORIZED REPRESENTATIVES, WHICH REASONABLY IS UNDERSTOOD BY\nCommodity Stream, LLC CLEARING TO HAVE BEEN DELIVERED TO Commodity Stream, LLC\nCLEARING BY THE CLEARING PARTICIPANT AND SUCH CLEARING PARTICIPANT SHALL\nINDEMNIFY THE DISCLAIMING PARTIES AND CLEARING PARTICIPANTS AGAINST ANY LOSS,\nLIABILITY OR EXPENSE AS A RESULT OF ANY ACT DONE IN RELIANCE UPON THE\nAUTHENTICITY OF ANY INFORMATION OR INSTRUCTION RECEIVED BY Commodity Stream, LLC\nCLEARING, THE INACCURACY OF THE INFORMATION CONTAINED THEREIN OR EFFECTING\nTRANSACTIONS IN RELIANCE UPON SUCH INFORMATION OR INSTRUCTION.</p>\n\n<p>(D). A CLEARING PARTICIPANT SHALL REIMBURSE Commodity Stream, LLC CLEARING FOR\nALL FEES, EXPENSES, CHARGES AND COSTS ASSESSED BY A DEPOSITORY AGAINST Commodity\nStream, LLC CLEARING WITH RESPECT TO MARGIN MAINTAINED IN SUCH CLEARING\nPARTICIPANT’S ACCOUNT, AND Commodity Stream, LLC CLEARING SHALL NOT HAVE ANY\nOBLIGATION OR RESPONSIBILITY TO PRESERVE, PROTECT, COLLECT OR REALIZE UPON, AND\nEXCEPT AS PROVIDED IN RULE 403(D), Commodity Stream, LLC CLEARING SHALL NOT BE\nLIABLE FOR, ANY LOSS OR DIMINUTION IN VALUE OR DEPRECIATION IN MARGIN DEPOSITED\nBY CLEARING PARTICIPANTS. CLEARING PARTICIPANTS THAT DEPOSIT MARGIN WITH AN\nAPPROVED DEPOSITORY INSTITUTION PURSUANT TO THE RULES SHALL HOLD Commodity\nStream, LLC CLEARING HARMLESS FROM ALL LIABILITY, LOSSES AND DAMAGES WHICH MAY\nRESULT FROM OR ARISE WITH RESPECT TO THE CARE AND SALE OF SUCH MARGIN.</p>\n\n<p>(E). ANY OBLIGATION OF Commodity Stream, LLC CLEARING TO A CLEARING PARTICIPANT\nARISING FROM A CONTRACT OR FROM ANY PROVISION OF THE RULES SHALL BE SUBJECT TO\nALL THE TERMS OF THE RULES, INCLUDING THE SETOFF AND OTHER RIGHTS SET FORTH\nHEREIN.</p>\n\n<p>(F). EXCEPT IN ANY CASE WHERE A DISCLAIMING PARTY HAS BEEN FINALLY ADJUDICATED\nTO HAVE ENGAGED IN FRAUD OR WILLFUL OR WANTON MISCONDUCT, IN NO EVENT SHALL THE\nDISCLAIMING PARTIES’ TOTAL COMBINED AGGREGATE LIABILITY FOR ALL CLAIMS, OTHER\nTHAN THOSE ARISING UNDER RULE 501(F), EXCEED $100,000 FOR ALL LOSSES SUFFERED\nFROM ALL CAUSES ON A SINGLE CALENDAR DAY; $200,000 FOR ALL LOSSES SUFFERED FROM\nALL CAUSES IN A SINGLE CALENDAR MONTH; AND $1,000,000 FOR ALL LOSSES SUFFERED\nFROM ALL CAUSES IN A SINGLE CALENDAR YEAR. IF THE NUMBER OF ALLOWED CLAIMS\nARISING OUT OF ANY FAILURES OR MALFUNCTIONS ON A SINGLE DAY, SINGLE MONTH OR\nSINGLE YEAR CANNOT BE FULLY SATISFIED BECAUSE OF THE ABOVE DOLLAR LIMITATIONS,\nALL SUCH CLAIMS SHALL BE LIMITED TO A PRO RATA SHARE OF THE MAXIMUM AMOUNT FOR\nTHE RESPECTIVE PERIOD.</p>\n\n<p>(G). THE RIGHTS OF Commodity Stream, LLC CLEARING SET FORTH HEREIN SHALL BE IN\nADDITION TO OTHER RIGHTS THAT Commodity Stream, LLC CLEARING MAY HAVE UNDER\nAPPLICABLE LAW AND GOVERNMENTAL REGULATIONS, OTHER PROVISIONS OF THE RULES,\nADDITIONAL AGREEMENTS WITH THE CLEARING PARTICIPANT OR ANY OTHER SOURCE.</p>\n\n<h2 id=\"502-clearing-participant-default\">502. Clearing Participant Default</h2>\n\n<p>(A). If a Clearing Participant is in Default, Margin held with respect to such Clearing\nParticipant’s Member Property Accounts, and any other of such Clearing Participant’s assets held\nby, pledged to or otherwise available to Commodity Stream, LLC, may be applied by Commodity Stream,\nLLC to discharge the Obligations of such Clearing Participant to Commodity Stream, LLC (including\nany costs and expenses associated with the liquidation, transfer or management of Contracts held in\nor for the Member Property Accounts of such Clearing Participant, and any fees, assessments or\nfines imposed by Commodity Stream, LLC on such Clearing Participant), and Commodity Stream, LLC may\ncause all Contracts of such Clearing Participant (whether or not carried in a Customer Account) to\nbe closed or offset, transferred to any other Clearing Participant, or otherwise resolved as\nprovided in these Rules.</p>\n\n<p>(B). If the Margin held with respect to such Clearing Participant’s Member Property Accounts,\nand other of such Clearing Participant’s assets held by, pledged to or otherwise available to\nCommodity Stream, LLC, including any guarantee issued pursuant to these Rules, are insufficient to\nsatisfy the defaulting Clearing Participant’s Obligations to Commodity Stream, LLC after giving\neffect to the application of such amounts pursuant to paragraph (a), such defaulting Clearing\nParticipant shall continue to be liable therefor.</p>\n\n<p>(C). In closing, offsetting, transferring or otherwise resolving the Contracts of a Clearing\nParticipant as provided herein and in Rule 601, Commodity Stream, LLC shall have the right:</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>(i) With respect to Contracts in a Customer Account of such Commodity Stream, LLC Clearing\nParticipant, to set off [x] any proceeds received by Commodity Stream, LLC from the disposition of\nsuch Contracts and any property or proceeds thereof deposited with or held by Commodity Stream, LLC\nas Margin for such account against [y] any amounts paid by Commodity Stream, LLC in the disposition\nof such Contracts,\n\nincluding any commissions or other losses or expenses incurred in connection therewith or\nin connection with the liquidation of Margin deposits in such Customer Account and any other\namounts owed to Commodity Stream, LLC as a result of transactions in the Customer Account or\notherwise lawfully chargeable against such Customer Account;\n\n(ii) With respect to the Contracts in any Member Property Accounts of such Clearing\nParticipant, to set off (x) any proceeds received by Commodity Stream, LLC from the disposition of\nsuch Contracts, any property or proceeds thereof deposited with or held by Commodity Stream, LLC as\nMargin for such Member Property Accounts and any other property of the Clearing Participant within\nthe possession or control of Commodity Stream, LLC other than property that has been identified by\nsuch Clearing Participant as required to be segregated pursuant to the CEA and CFTC Regulations,\nagainst (y) any amounts paid by Commodity Stream, LLC in the disposition of such Contracts,\nincluding any commissions or other losses or expenses incurred in connection therewith or in\nconnection with the liquidation of Margin deposits in such Member Property Accounts, and any other\nObligations of the Clearing Participant to Commodity Stream, LLC, including Obligations of the\nClearing Participant to Commodity Stream, LLC remaining after the setoffs referred to in paragraph\n(i) above, and any Obligations arising from any other Member Property Accounts maintained by the\nClearing Participant with Commodity Stream, LLC; and\n\n(iii) To defer closing or otherwise settling such trades and Contracts if, in its\ndiscretion, it determines that the closing out of some or all of the suspended Clearing\nParticipant’s trades or Contracts would not be in the best interests of Commodity Stream, LLC or\nother Clearing Participants, taking into account the size and nature of the positions in question,\nmarket conditions prevailing at the time, the potential market effects of such liquidating\ntransactions as might be directed by Commodity Stream, LLC, and such other circumstances as it\ndeems relevant;\n\n    (iv) Or take any action the Clearinghouse deems proper or in the best interest of the\nClearinghouse or its Clearing Participants.\n</code></pre>  </div></div>\n\n<p>(D). For purposes of this Rule, each Default by a Network and/or Clearing Participant will be\nconsidered a separate Default.</p>\n\n<p>(E). A Network and/or Clearing Participant shall take no action, including but not limited to\nattempting to obtain a court order, that would interfere with the ability of Commodity Stream, LLC\nto exercise its rights under the Rules and its agreements with such Network or Clearing\nParticipant.</p>\n\n<h2 id=\"503-investment-of-customer-funds\">503. Investment of Customer Funds</h2>\n\n<p>Funds and assets belonging to Customers that are invested by Commodity Stream,\nLLC Clearing shall be held in instruments that comply with CFTC Regulations 1.25\nand 39.15(e). Non-Customer funds and assets belonging to Clearing Participants\nthat are invested by Commodity Stream, LLC shall be held in instruments that\ncomply with CFTC Regulation 39.15(e).</p>\n","dir":"/","name":"obligations.md","path":"obligations.md","url":"/obligations.html"},{"sort":9,"layout":"default","title":"Technical Overview","content":"<h1 id=\"technical-overview\">Technical Overview</h1>\n\n<h3 id=\"user-example\">User Example</h3>\n\n<p>Proposed end-user transaction example for interacting with the YCabal</p>\n\n<blockquote>\n <p>NOTE: Since the JSON-RPC spec allows responses to be returned in a\ndifferent order than sent, we need a mechanism for choosing a\ncanonical id from a list that doesn’t depend on the order. This\nchooses the “minimum” id by an arbitrary ordering: the smallest string\nif possible, otherwise the smallest number, otherwise null.</p>\n</blockquote>\n\n<div class=\"language-jsx highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nx\">order</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n\t<span class=\"na\">Give</span><span class=\"p\">:</span> <span class=\"nx\">ETH</span><span class=\"p\">,</span>\n\t<span class=\"na\">Want</span><span class=\"p\">:</span> <span class=\"nx\">DAI</span><span class=\"p\">,</span>\n\t<span class=\"na\">SlippageLimit</span><span class=\"p\">:</span> <span class=\"mi\">10</span><span class=\"o\">%</span><span class=\"p\">,</span>\n\t<span class=\"na\">Amount</span><span class=\"p\">:</span> <span class=\"mi\">1000</span><span class=\"nx\">ETH</span><span class=\"p\">,</span>\n\t<span class=\"na\">Cabal</span><span class=\"p\">:</span> <span class=\"mh\">0xabc</span><span class=\"p\">...,</span>\n\t<span class=\"na\">FeesIn</span><span class=\"p\">:</span> <span class=\"nx\">DAI</span><span class=\"p\">,</span>\n\t<span class=\"na\">TargetDEX</span><span class=\"p\">:</span> <span class=\"nx\">SushiSwap</span><span class=\"p\">,</span>\n\t<span class=\"na\">Deadline</span><span class=\"p\">:</span> <span class=\"nx\">time</span><span class=\"p\">.</span><span class=\"nx\">Now</span><span class=\"p\">()</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"o\">*</span><span class=\"nx\">time</span><span class=\"p\">.</span><span class=\"nx\">Minute</span>\n\t<span class=\"na\">Signature</span><span class=\"p\">:</span> <span class=\"nx\">sign</span><span class=\"p\">(</span><span class=\"nx\">order</span><span class=\"p\">.</span><span class=\"nx\">SignBytes</span><span class=\"p\">())</span>\n<span class=\"p\">}</span>\n</code></pre>  </div></div>\n\n<p>Now if the Cabal broadcasts this transaction with an arbitrage order,\nthe transaction contains 2 orders:</p>\n\n<blockquote>\n <p>Note: the transaction below is a mock-up for the proposed <em>data\nfields</em></p>\n</blockquote>\n\n<div class=\"language-jsx highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nx\">transactions</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n\t<span class=\"p\">{</span>\n\t\t<span class=\"na\">Give</span><span class=\"p\">:</span> <span class=\"nx\">ETH</span><span class=\"p\">,</span>\n\t\t<span class=\"na\">Want</span><span class=\"p\">:</span> <span class=\"nx\">DAI</span><span class=\"p\">,</span>\n\t\t<span class=\"na\">SlippageLimit</span><span class=\"p\">:</span> <span class=\"mi\">10</span><span class=\"o\">%</span><span class=\"p\">,</span>\n\t\t<span class=\"na\">Amount</span><span class=\"p\">:</span> <span class=\"mi\">1000</span><span class=\"nx\">ETH</span><span class=\"p\">,</span>\n\t\t<span class=\"na\">Cabal</span><span class=\"p\">:</span> <span class=\"mh\">0xabc</span><span class=\"p\">...,</span>\n\t\t<span class=\"na\">FeesIn</span><span class=\"p\">:</span> <span class=\"nx\">DAI</span><span class=\"p\">,</span>\n\t\t<span class=\"na\">TargetDEX</span><span class=\"p\">:</span> <span class=\"nx\">SushiSwap</span><span class=\"p\">,</span>\n\t\t<span class=\"na\">Deadline</span><span class=\"p\">:</span> <span class=\"nx\">time</span><span class=\"p\">.</span><span class=\"nx\">Now</span><span class=\"p\">()</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"o\">*</span><span class=\"nx\">time</span><span class=\"p\">.</span><span class=\"nx\">Minute</span>\n\t\t<span class=\"na\">Signature</span><span class=\"p\">:</span> <span class=\"nx\">sign</span><span class=\"p\">(</span><span class=\"nx\">order</span><span class=\"p\">.</span><span class=\"nx\">SignBytes</span><span class=\"p\">())</span>\n\t<span class=\"p\">},</span>\n\t<span class=\"p\">{</span>\n\t\t<span class=\"na\">Give</span><span class=\"p\">:</span> <span class=\"nx\">DAI</span><span class=\"p\">,</span>\n\t\t<span class=\"na\">Want</span><span class=\"p\">:</span> <span class=\"nx\">ETH</span><span class=\"p\">,</span>\n\t\t<span class=\"na\">SlippageLimit</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"o\">%</span><span class=\"p\">,</span>\n\t\t<span class=\"na\">Amount</span><span class=\"p\">:</span> <span class=\"mi\">10</span><span class=\"nx\">ETH</span><span class=\"p\">,</span>\n\t\t<span class=\"na\">Cabal</span><span class=\"p\">:</span> <span class=\"mh\">0xabc</span><span class=\"p\">...,</span>\n\t\t<span class=\"na\">FeesIn</span><span class=\"p\">:</span> <span class=\"nx\">DAI</span><span class=\"p\">,</span>\n\t\t<span class=\"na\">TargetDEX</span><span class=\"p\">:</span> <span class=\"nx\">SushiSwap</span><span class=\"p\">,</span>\n\t\t<span class=\"na\">Deadline</span><span class=\"p\">:</span> <span class=\"nx\">time</span><span class=\"p\">.</span><span class=\"nx\">Now</span><span class=\"p\">()</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"o\">*</span><span class=\"nx\">time</span><span class=\"p\">.</span><span class=\"nx\">Minute</span>\n\t\t<span class=\"na\">Signature</span><span class=\"p\">:</span> <span class=\"nx\">sign</span><span class=\"p\">(</span><span class=\"nx\">order</span><span class=\"p\">.</span><span class=\"nx\">SignBytes</span><span class=\"p\">()),</span>\n\t\t<span class=\"nx\">IsBackbone</span> <span class=\"na\">Cabal</span><span class=\"p\">:</span> <span class=\"kc\">true</span><span class=\"p\">,</span>\n\t\t<span class=\"na\">TransferProfitTo</span><span class=\"p\">:</span> <span class=\"nx\">transactions</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">].</span><span class=\"nx\">signer</span>\n\t<span class=\"p\">}</span>\n<span class=\"p\">]</span>\n</code></pre>  </div></div>\n\n<p>The arbitrage profit generated by second order is sent to the\n<code class=\"language-plaintext highlighter-rouge\">msg.sender</code> of the first order.</p>\n\n<p>The first order will still lose 5%(assumption) in slippage.</p>\n\n<p>Arbitrage profits will rarely be more than the slippage loss.</p>\n\n<p>If someone front runs the transaction sent by the Cabal:</p>\n\n<ol>\n <li>They pay for the gas while post confirmation of transaction the fees\nfor order1 goes to the relayer in the signed order.</li>\n <li>They lose 5% in slippage as our real user does.</li>\n</ol>\n\n<h2 id=\"engine\">Engine</h2>\n\n<p>YCabal uses a batch auction-based matching engine to execute orders.\nBatch auctions were chosen to reduce the impact of frontrunning on the\nexchange.</p>\n\n<ol>\n <li>\n <p>All orders for the given market are collected.</p>\n </li>\n <li>\n <p>Orders beyond their time-in-force are canceled.</p>\n </li>\n <li>\n <p>Orders are placed into separate lists by market side, and aggregate\nsupply and demand curves are calculated.</p>\n </li>\n <li>\n <p>The matching engine discovers the price at which the aggregate supply\nand demand curves cross, which yields the clearing price. If there is\na horizontal cross - i.e., two prices for which aggregate supply and\ndemand are equal - then the clearing price is the midpoint between\nthe two prices.</p>\n </li>\n <li>\n <p>If both sides of the market have equal volume, then all orders are\ncompletely filled. If one side has more volume than the other, then\nthe side with higher volume is rationed pro-rata based on how much\nits volume exceeds the other side. For example, if aggregate demand\nis 100 and aggregate supply is 90, then every order on the demand\nside of the market will be matched by 90%.</p>\n </li>\n</ol>\n\n<p>Orders are sorted based on their price, and order ID. Order IDs are\ngenerated at post time and is the only part of the matching engine that\nis time-dependent. However, the oldest order IDs are matched first so\nthere is no incentive to post an order ahead of someone else’s.</p>\n","dir":"/","name":"technical.md","path":"technical.md","url":"/technical.html"},{"sort":10,"layout":"default","title":"Limit Order Books","content":"<h1 id=\"limit-order-books\">Limit Order Books</h1>\n\n<h2 id=\"exchanges\">Exchanges</h2>\n\n<p>Most electronic Exchanges use LOBs to match orders placed by buyers and sellers. LOBs have entered\nthe mainstream in recent years with the popularisation of Cryptocurrency Exchanges. Understanding\nhow a LOB works is essential for understanding the market-data published by these Exchanges.</p>\n\n<p>An Exchange is a place where traders come together to exchange goods or services. Sellers offer\ntheir goods or services to buyers that bid for them. The Exchange accepts bids and offers in the\nform of orders and attempts to match them:</p>\n\n<ul>\n <li>bids are submitted as buy orders;</li>\n <li>offers are submitted as sell orders.</li>\n</ul>\n\n<p>Exchanges are also known as “venues”, although Exchanges are not the only kind of trading venue.</p>\n\n<h2 id=\"level-2-order-books\">Level 2 Order Books</h2>\n\n<p>The “liquidity” available in the LOB can be viewed in multiple ways. In this article, we present the\nliquidity in the LOB as a stack of “price levels”, where each price level comprises one or more\norders with the same price and side. This representation is known as a level 2 order book aggregated\nby price.</p>\n\n<p>Consider the following LOB with two price levels:</p>\n\n<table>\n <thead>\n <tr>\n <th>Level</th>\n <th>Bid Qty</th>\n <th>Bid Price</th>\n <th>Spread</th>\n <th>Offer Price</th>\n <th>Offer Qty</th>\n </tr>\n </thead>\n <tbody>\n <tr>\n <td>1</td>\n <td>1</td>\n <td>9649</td>\n <td>2</td>\n <td>9651</td>\n <td>1</td>\n </tr>\n <tr>\n <td>2</td>\n <td>5</td>\n <td>9648</td>\n <td>5</td>\n <td>9653</td>\n <td>3</td>\n </tr>\n </tbody>\n</table>\n\n<p>For each given price level:</p>\n\n<ul>\n <li>the quantity is the sum of all order quantities at that level;</li>\n <li>the “spread” is the difference between the bid and offer price.</li>\n</ul>\n\n<p>The first level, or Top Of Book (TOB), shows the best bid and offer available in the order book:</p>\n\n<ul>\n <li>the bids are arranged in descending order with the best bid at the top;</li>\n <li>the offers are arranged in ascending order with the best offer at the top.</li>\n</ul>\n\n<h2 id=\"limit-orders\">Limit Orders</h2>\n\n<p>The LOB gets its name from a standard order type known as a “limit” order; a LOB is essentially a\nbook of limit orders.</p>\n\n<p>The price on a limit order is known as the limit price. The limit price specifies the worst price at\nwhich the trader is willing to trade (highest for bids and lowest for offers). This article deals\nexclusively with limit orders, so the limit price is subsequently referred to simply as the price.</p>\n\n<h2 id=\"resting-orders\">Resting Orders</h2>\n\n<p>A trade happens when a buy or sell order is matched with one or more pre-existing orders in the LOB.\nHow an order behaves when it is not immediately filled varies between order types.</p>\n\n<p>Limit orders may also specify how long they are “good for”. If a limit order is good for a period of\ntime, and it is not immediately filled, then it is placed in the LOB according to its side (buy or\nsell) and price. An unmatched limit order that is live or “working” in the LOB is known as a\n“resting” order. Order types that cannot rest in the order book are either immediately filled or\ncancelled.</p>\n\n<p>The short-hand notation below will be used in proceeding examples to describe a limit order:</p>\n\n<dl>\n <dt>BUY 2@9650</dt>\n <dd>a buy order where 2 is the order quantity and 9650 is the price.</dd>\n</dl>\n\n<p>If this limit order is applied to our earlier example, then it will rest at the TOB on the bid side,\nbecause its price is better than the current TOB:</p>\n\n<table>\n <thead>\n <tr>\n <th>Level</th>\n <th>Bid Qty</th>\n <th>Bid Price</th>\n <th>Spread</th>\n <th>Offer Price</th>\n <th>Offer Qty</th>\n </tr>\n </thead>\n <tbody>\n <tr>\n <td>1</td>\n <td><strong>2</strong></td>\n <td><strong>9650</strong></td>\n <td>1</td>\n <td>9651</td>\n <td>1</td>\n </tr>\n <tr>\n <td>2</td>\n <td>1</td>\n <td>9649</td>\n <td>4</td>\n <td>9653</td>\n <td>3</td>\n </tr>\n <tr>\n <td>3</td>\n <td>5</td>\n <td>9648</td>\n <td> </td>\n <td> </td>\n <td> </td>\n </tr>\n </tbody>\n</table>\n\n<p>Similarly, a limit order to “SELL 3@9653” will “join” the second level on the offer side:</p>\n\n<table>\n <thead>\n <tr>\n <th>Level</th>\n <th>Bid Qty</th>\n <th>Bid Price</th>\n <th>Spread</th>\n <th>Offer Price</th>\n <th>Offer Qty</th>\n </tr>\n </thead>\n <tbody>\n <tr>\n <td>1</td>\n <td>2</td>\n <td>9650</td>\n <td>1</td>\n <td>9651</td>\n <td>1</td>\n </tr>\n <tr>\n <td>2</td>\n <td>1</td>\n <td>9649</td>\n <td>4</td>\n <td>9653</td>\n <td><strong>6</strong></td>\n </tr>\n <tr>\n <td>3</td>\n <td>5</td>\n <td>9648</td>\n <td> </td>\n <td> </td>\n <td> </td>\n </tr>\n </tbody>\n</table>\n\n<p>Note that the number of orders at each price level cannot be derived from the aggregate quantity.\nThe order count is often shown as a separate “count” field.</p>\n\n<h2 id=\"order-matching\">Order Matching</h2>\n\n<p>In a classic LOB, Matching happens by price/time priority. This means that orders are matched first\nby price, and then by time (order age). If multiple orders exist at the same price level, for\nexample, then the oldest order will be matched first.</p>\n\n<p>Consider the effect of a limit order to “BUY 2@9652” that crosses the spread:</p>\n\n<table>\n <thead>\n <tr>\n <th>Level</th>\n <th>Bid Qty</th>\n <th>Bid Price</th>\n <th>Spread</th>\n <th>Offer Price</th>\n <th>Offer Qty</th>\n </tr>\n </thead>\n <tbody>\n <tr>\n <td>1</td>\n <td><strong>1</strong></td>\n <td><strong>9652</strong></td>\n <td>2</td>\n <td>9653</td>\n <td>6</td>\n </tr>\n <tr>\n <td>2</td>\n <td>2</td>\n <td>9650</td>\n <td> </td>\n <td> </td>\n <td> </td>\n </tr>\n <tr>\n <td>3</td>\n <td>1</td>\n <td>9649</td>\n <td> </td>\n <td> </td>\n <td> </td>\n </tr>\n <tr>\n <td>4</td>\n <td>5</td>\n <td>9648</td>\n <td> </td>\n <td> </td>\n <td> </td>\n </tr>\n </tbody>\n</table>\n\n<p>In this example, the limit order to “BUY 2@9652” crossed with the first level on the offer side\n(“OFFER 1@9651”). The price on the order was higher than the level it crossed, so the resulting\ntrade will have an improved price of 9651.</p>\n\n<p>The limit order was not completely filled, because there was insufficient quantity on the offer\nside. And assuming this order is good for some time, any quantity remaining after the matching phase\nis complete will rest on the bid side, hence the new price level on the bid side at TOB.</p>\n\n<p>Orders that cross the spread and “take” liquidity from the order book are known as an “aggressive”\norders. By contrast, orders that do not cross the spread are known as “passive” orders.</p>\n\n<p>Aggressive orders may “sweep” through multiple price levels, as demonstrated in the following\nexample, where an aggressive order to “SELL 4@9649” sweeps through the top three levels of the bid\nside:</p>\n\n<table>\n <thead>\n <tr>\n <th>Level</th>\n <th>Bid Qty</th>\n <th>Bid Price</th>\n <th>Spread</th>\n <th>Offer Price</th>\n <th>Offer Qty</th>\n </tr>\n </thead>\n <tbody>\n <tr>\n <td>4</td>\n <td>5</td>\n <td>9648</td>\n <td>5</td>\n <td>9653</td>\n <td>6</td>\n </tr>\n </tbody>\n</table>\n\n<p>This aggressive order will result in the following trades:</p>\n\n<ol>\n <li>1@9652</li>\n <li>2@9650</li>\n <li>1@9649</li>\n</ol>\n\n<h2 id=\"makers-and-takers\">Makers and Takers</h2>\n\n<p>Traders that submit aggressive orders are known as “takers”. Traders that submit passive orders are\nknown as “makers”. Market-makers play an important role in providing liquidity to the market,\nbecause, under normal market conditions, they are willing to quote two-way prices on a continual\nbasis, thus ensuring that there is always a maker available to take the opposing side of a taker’s\ntrade.</p>\n\n<p>Each trade transaction comprises two matched orders. These orders can be classified both in terms of\na buyer and a seller or a maker and a taker. To avoid confusion, trades are often referred to from\nthe taker’s perspective as “paid” or “given”:</p>\n\n<p>Paid: taker bought or “lifted the offer”.</p>\n\n<p>Given: taker sold or “hit the bid”.</p>\n\n<p>This terminology is particular relevant for public trade feeds, where an Exchange may publicise\nanonymised trade information from the taker’s perspective.</p>\n","dir":"/","name":"limit_order_books.md","path":"limit_order_books.md","url":"/limit_order_books.html"},{"sort":10,"layout":"default","title":"Roadmap","content":"<h1 id=\"roadmap\">Roadmap</h1>\n\n<p>If you want to list all <code class=\"language-plaintext highlighter-rouge\">pages</code> in the current directory, add following code to your markdown file!</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>{% include list.liquid %}\n</code></pre>  </div></div>\n\n<p>Then Generate a list like this:</p>\n\n<ul>\n <li><a href=\"/pages/backbonecabal/knowledgebase/proposal.html\">Sushiswap Proposal</a></li>\n <li><a href=\"/pages/backbonecabal/knowledgebase/benefits.html\">Benefits</a></li>\n <li><a href=\"/pages/backbonecabal/knowledgebase/refunder.html\">Proxy Gas Refunder</a></li>\n <li><a href=\"/pages/backbonecabal/knowledgebase/directory.html\">Directory</a></li>\n <li><a href=\"/pages/backbonecabal/knowledgebase/trade-settlement.html\">Trade and Settlement</a></li>\n <li><a href=\"/pages/backbonecabal/knowledgebase/suspensions.html\">Suspension and Disciplinary Proceedings</a></li>\n <li><a href=\"/pages/backbonecabal/knowledgebase/obligations.html\">Obligations</a></li>\n <li><a href=\"/pages/backbonecabal/knowledgebase/technical.html\">Technical Overview</a></li>\n <li><a href=\"/pages/backbonecabal/knowledgebase/limit_order_books.html\">Limit Order Books</a></li>\n <li><a href=\"/pages/backbonecabal/knowledgebase/roadmap.html\">Roadmap</a></li>\n <li><a href=\"/pages/backbonecabal/knowledgebase/web3modal.html\">Backbone Cabal rpc connect protocol (Web3 RPC Network)</a></li>\n</ul>\n\n<p>If you want to list all <code class=\"language-plaintext highlighter-rouge\">pages and sub directory</code> in the current directory, add following code to your markdown file!</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>{% include list.liquid all=true %}\n</code></pre>  </div></div>\n\n<p>Then Generate a list like this <a href=\"/pages/backbonecabal/knowledgebase/docs/\">table of contents</a>!</p>\n","dir":"/","name":"roadmap.md","path":"roadmap.md","url":"/roadmap.html"},{"sort":10,"layout":"default","title":"Backbone Cabal rpc connect protocol (Web3 RPC Network)","content":"<h2 id=\"backbone-cabal-rpc-connect-protocol-web3-rpc-network\">Backbone Cabal rpc connect protocol (Web3 RPC Network)</h2>\n\n<blockquote>\n <p><a href=\"https://backbonecabal.xyz\">backbonecabal.xyz</a></p>\n</blockquote>\n\n<ol>\n <li>Install Provider Package</li>\n</ol>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>npm <span class=\"nb\">install</span> <span class=\"nt\">--save</span> @@backbonecabal/web3-client\n<span class=\"c\"># OR</span>\nyarn add @backbonecabal/web3-client\n</code></pre>  </div></div>\n\n<ol>\n <li>Set Provider Options</li>\n</ol>\n\n<div class=\"language-typescript highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">import</span> <span class=\"nx\">BackboneCabal</span> <span class=\"k\">from</span> <span class=\"dl\">\"</span><span class=\"s2\">@backbonecabal/web3-client;\nconst providerOptions = {\n  backbone: {\n    package: BackboneCabal, // required\n    options: {\n      backboneId: </span><span class=\"dl\">\"</span><span class=\"nx\">BACKBONE_ID</span><span class=\"dl\">\"</span><span class=\"s2\"> // required\n    }\n  }\n};\n</span></code></pre>  </div></div>\n\n<h2 id=\"documentation\">Documentation</h2>\n\n<p><a href=\"https://github.com/backbonecabal/omnibus\">Backbone Cabal RPC and API Developer Documentation</a></p>\n\n<p><a href=\"https://github.com/backbonecabal/knowledgebase\">Backbone Knowledgebase</a></p>\n\n<p><a href=\"mailto:support@manifoldfinance.com\">support@manifoldfinance.com</a></p>\n","dir":"/","name":"web3modal.md","path":"web3modal.md","url":"/web3modal.html"}]